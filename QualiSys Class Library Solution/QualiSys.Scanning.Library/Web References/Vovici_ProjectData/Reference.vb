'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18052
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18052.
'
Namespace Vovici_ProjectData
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ProjectDataSoap", [Namespace]:="http://www.perseus.com/Pdc.WS")>  _
    Partial Public Class ProjectData
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetSurveyListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCommonSurveyListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProfileListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSurveyProjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreatePanelProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQuestionnaireOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPublishedQuestionnaireOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetQuestionnaireOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQuestionnaireVersionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RevertQuestionnaireOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSurveyCustomPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCustomPropertiesForSurveysOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSurveyCustomPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDataMapOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReportDataMapOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetColumnListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSurveyInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSurveyFieldInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepublishProjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetEndPageURLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProjectInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetProjectInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteProjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetResponseCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSurveyDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSurveyDataExOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSurveyDataPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetResponseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangeResponseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangeMultipleResponsesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddResponseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPreloadDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPreloadDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteParticipantOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ClearResponseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFrequencyInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStatisticsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthorizeMultiplePanelistsForSurveyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthorizePanelistForSurveyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthorizeParticipantForSurveyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAuthorizedParticipantCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParticipantDataExOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParticipantDataPagedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParticipantDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParticipantInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetParticipantInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindPanelistRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInvitationTextOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInvitationTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetInvitationTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetInvitationStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendInvitationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateBorrowedQuestionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Nrc.QualiSys.Scanning.Library.My.MySettings.Default.Nrc_QualiSys_Scanning_Library_Vovici_ProjectData_ProjectData
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetSurveyListCompleted As GetSurveyListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCommonSurveyListCompleted As GetCommonSurveyListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProfileListCompleted As GetProfileListCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSurveyProjectCompleted As CreateSurveyProjectCompletedEventHandler
        
        '''<remarks/>
        Public Event CreatePanelProfileCompleted As CreatePanelProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQuestionnaireCompleted As GetQuestionnaireCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPublishedQuestionnaireCompleted As GetPublishedQuestionnaireCompletedEventHandler
        
        '''<remarks/>
        Public Event SetQuestionnaireCompleted As SetQuestionnaireCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQuestionnaireVersionsCompleted As GetQuestionnaireVersionsCompletedEventHandler
        
        '''<remarks/>
        Public Event RevertQuestionnaireCompleted As RevertQuestionnaireCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSurveyCustomPropertiesCompleted As GetSurveyCustomPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCustomPropertiesForSurveysCompleted As GetCustomPropertiesForSurveysCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSurveyCustomPropertiesCompleted As SetSurveyCustomPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDataMapCompleted As GetDataMapCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReportDataMapCompleted As GetReportDataMapCompletedEventHandler
        
        '''<remarks/>
        Public Event GetColumnListCompleted As GetColumnListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSurveyInformationCompleted As GetSurveyInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSurveyFieldInformationCompleted As GetSurveyFieldInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event RepublishProjectCompleted As RepublishProjectCompletedEventHandler
        
        '''<remarks/>
        Public Event SetEndPageURLCompleted As SetEndPageURLCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProjectInformationCompleted As GetProjectInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event SetProjectInformationCompleted As SetProjectInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteProjectCompleted As DeleteProjectCompletedEventHandler
        
        '''<remarks/>
        Public Event GetResponseCountCompleted As GetResponseCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSurveyDataCompleted As GetSurveyDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSurveyDataExCompleted As GetSurveyDataExCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSurveyDataPagedCompleted As GetSurveyDataPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetResponseCompleted As GetResponseCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangeResponseCompleted As ChangeResponseCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangeMultipleResponsesCompleted As ChangeMultipleResponsesCompletedEventHandler
        
        '''<remarks/>
        Public Event AddResponseCompleted As AddResponseCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPreloadDataCompleted As GetPreloadDataCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPreloadDataCompleted As SetPreloadDataCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteParticipantCompleted As DeleteParticipantCompletedEventHandler
        
        '''<remarks/>
        Public Event ClearResponseCompleted As ClearResponseCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFrequencyInformationCompleted As GetFrequencyInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStatisticsCompleted As GetStatisticsCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthorizeMultiplePanelistsForSurveyCompleted As AuthorizeMultiplePanelistsForSurveyCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthorizePanelistForSurveyCompleted As AuthorizePanelistForSurveyCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthorizeParticipantForSurveyCompleted As AuthorizeParticipantForSurveyCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAuthorizedParticipantCountCompleted As GetAuthorizedParticipantCountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParticipantDataExCompleted As GetParticipantDataExCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParticipantDataPagedCompleted As GetParticipantDataPagedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParticipantDataCompleted As GetParticipantDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParticipantInformationCompleted As GetParticipantInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event SetParticipantInformationCompleted As SetParticipantInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event FindPanelistRecordCompleted As FindPanelistRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInvitationTextCompleted As GetInvitationTextCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInvitationTemplateCompleted As GetInvitationTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event SetInvitationTemplateCompleted As SetInvitationTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event SetInvitationStatusCompleted As SetInvitationStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event SendInvitationsCompleted As SendInvitationsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateBorrowedQuestionsCompleted As UpdateBorrowedQuestionsCompletedEventHandler
        
        '''<remarks/>
        Public Event PingCompleted As PingCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginCompleted As LoginCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetSurveyList", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSurveyList(ByVal sharingType As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetSurveyList", New Object() {sharingType})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSurveyListAsync(ByVal sharingType As Integer)
            Me.GetSurveyListAsync(sharingType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSurveyListAsync(ByVal sharingType As Integer, ByVal userState As Object)
            If (Me.GetSurveyListOperationCompleted Is Nothing) Then
                Me.GetSurveyListOperationCompleted = AddressOf Me.OnGetSurveyListOperationCompleted
            End If
            Me.InvokeAsync("GetSurveyList", New Object() {sharingType}, Me.GetSurveyListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSurveyListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSurveyListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSurveyListCompleted(Me, New GetSurveyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetCommonSurveyList", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCommonSurveyList(ByVal initialSource As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetCommonSurveyList", New Object() {initialSource})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCommonSurveyListAsync(ByVal initialSource As String)
            Me.GetCommonSurveyListAsync(initialSource, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCommonSurveyListAsync(ByVal initialSource As String, ByVal userState As Object)
            If (Me.GetCommonSurveyListOperationCompleted Is Nothing) Then
                Me.GetCommonSurveyListOperationCompleted = AddressOf Me.OnGetCommonSurveyListOperationCompleted
            End If
            Me.InvokeAsync("GetCommonSurveyList", New Object() {initialSource}, Me.GetCommonSurveyListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCommonSurveyListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCommonSurveyListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCommonSurveyListCompleted(Me, New GetCommonSurveyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetProfileList", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProfileList() As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetProfileList", New Object(-1) {})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProfileListAsync()
            Me.GetProfileListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProfileListAsync(ByVal userState As Object)
            If (Me.GetProfileListOperationCompleted Is Nothing) Then
                Me.GetProfileListOperationCompleted = AddressOf Me.OnGetProfileListOperationCompleted
            End If
            Me.InvokeAsync("GetProfileList", New Object(-1) {}, Me.GetProfileListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProfileListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProfileListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProfileListCompleted(Me, New GetProfileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/CreateSurveyProject", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSurveyProject(ByVal projectName As String, ByVal description As String, ByVal respondentSource As Integer) As Integer
            Dim results() As Object = Me.Invoke("CreateSurveyProject", New Object() {projectName, description, respondentSource})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSurveyProjectAsync(ByVal projectName As String, ByVal description As String, ByVal respondentSource As Integer)
            Me.CreateSurveyProjectAsync(projectName, description, respondentSource, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSurveyProjectAsync(ByVal projectName As String, ByVal description As String, ByVal respondentSource As Integer, ByVal userState As Object)
            If (Me.CreateSurveyProjectOperationCompleted Is Nothing) Then
                Me.CreateSurveyProjectOperationCompleted = AddressOf Me.OnCreateSurveyProjectOperationCompleted
            End If
            Me.InvokeAsync("CreateSurveyProject", New Object() {projectName, description, respondentSource}, Me.CreateSurveyProjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSurveyProjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSurveyProjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSurveyProjectCompleted(Me, New CreateSurveyProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/CreatePanelProfile", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreatePanelProfile(ByVal profileName As String, ByVal description As String) As Integer
            Dim results() As Object = Me.Invoke("CreatePanelProfile", New Object() {profileName, description})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreatePanelProfileAsync(ByVal profileName As String, ByVal description As String)
            Me.CreatePanelProfileAsync(profileName, description, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreatePanelProfileAsync(ByVal profileName As String, ByVal description As String, ByVal userState As Object)
            If (Me.CreatePanelProfileOperationCompleted Is Nothing) Then
                Me.CreatePanelProfileOperationCompleted = AddressOf Me.OnCreatePanelProfileOperationCompleted
            End If
            Me.InvokeAsync("CreatePanelProfile", New Object() {profileName, description}, Me.CreatePanelProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreatePanelProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreatePanelProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreatePanelProfileCompleted(Me, New CreatePanelProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetQuestionnaire", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQuestionnaire(ByVal projectId As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetQuestionnaire", New Object() {projectId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQuestionnaireAsync(ByVal projectId As Integer)
            Me.GetQuestionnaireAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQuestionnaireAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetQuestionnaireOperationCompleted Is Nothing) Then
                Me.GetQuestionnaireOperationCompleted = AddressOf Me.OnGetQuestionnaireOperationCompleted
            End If
            Me.InvokeAsync("GetQuestionnaire", New Object() {projectId}, Me.GetQuestionnaireOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQuestionnaireOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQuestionnaireCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQuestionnaireCompleted(Me, New GetQuestionnaireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetPublishedQuestionnaire", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPublishedQuestionnaire(ByVal projectId As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetPublishedQuestionnaire", New Object() {projectId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPublishedQuestionnaireAsync(ByVal projectId As Integer)
            Me.GetPublishedQuestionnaireAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPublishedQuestionnaireAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetPublishedQuestionnaireOperationCompleted Is Nothing) Then
                Me.GetPublishedQuestionnaireOperationCompleted = AddressOf Me.OnGetPublishedQuestionnaireOperationCompleted
            End If
            Me.InvokeAsync("GetPublishedQuestionnaire", New Object() {projectId}, Me.GetPublishedQuestionnaireOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPublishedQuestionnaireOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPublishedQuestionnaireCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPublishedQuestionnaireCompleted(Me, New GetPublishedQuestionnaireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/SetQuestionnaire", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetQuestionnaire(ByVal projectId As Integer, ByVal surveyXml As String) As Integer
            Dim results() As Object = Me.Invoke("SetQuestionnaire", New Object() {projectId, surveyXml})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetQuestionnaireAsync(ByVal projectId As Integer, ByVal surveyXml As String)
            Me.SetQuestionnaireAsync(projectId, surveyXml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetQuestionnaireAsync(ByVal projectId As Integer, ByVal surveyXml As String, ByVal userState As Object)
            If (Me.SetQuestionnaireOperationCompleted Is Nothing) Then
                Me.SetQuestionnaireOperationCompleted = AddressOf Me.OnSetQuestionnaireOperationCompleted
            End If
            Me.InvokeAsync("SetQuestionnaire", New Object() {projectId, surveyXml}, Me.SetQuestionnaireOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetQuestionnaireOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetQuestionnaireCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetQuestionnaireCompleted(Me, New SetQuestionnaireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetQuestionnaireVersions", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQuestionnaireVersions(ByVal projectId As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetQuestionnaireVersions", New Object() {projectId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQuestionnaireVersionsAsync(ByVal projectId As Integer)
            Me.GetQuestionnaireVersionsAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQuestionnaireVersionsAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetQuestionnaireVersionsOperationCompleted Is Nothing) Then
                Me.GetQuestionnaireVersionsOperationCompleted = AddressOf Me.OnGetQuestionnaireVersionsOperationCompleted
            End If
            Me.InvokeAsync("GetQuestionnaireVersions", New Object() {projectId}, Me.GetQuestionnaireVersionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQuestionnaireVersionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQuestionnaireVersionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQuestionnaireVersionsCompleted(Me, New GetQuestionnaireVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/RevertQuestionnaire", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RevertQuestionnaire(ByVal projectId As Integer, ByVal versionId As Integer)
            Me.Invoke("RevertQuestionnaire", New Object() {projectId, versionId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RevertQuestionnaireAsync(ByVal projectId As Integer, ByVal versionId As Integer)
            Me.RevertQuestionnaireAsync(projectId, versionId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RevertQuestionnaireAsync(ByVal projectId As Integer, ByVal versionId As Integer, ByVal userState As Object)
            If (Me.RevertQuestionnaireOperationCompleted Is Nothing) Then
                Me.RevertQuestionnaireOperationCompleted = AddressOf Me.OnRevertQuestionnaireOperationCompleted
            End If
            Me.InvokeAsync("RevertQuestionnaire", New Object() {projectId, versionId}, Me.RevertQuestionnaireOperationCompleted, userState)
        End Sub
        
        Private Sub OnRevertQuestionnaireOperationCompleted(ByVal arg As Object)
            If (Not (Me.RevertQuestionnaireCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RevertQuestionnaireCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetSurveyCustomProperties", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSurveyCustomProperties(ByVal projectId As Integer, ByVal columnName As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetSurveyCustomProperties", New Object() {projectId, columnName})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSurveyCustomPropertiesAsync(ByVal projectId As Integer, ByVal columnName As String)
            Me.GetSurveyCustomPropertiesAsync(projectId, columnName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSurveyCustomPropertiesAsync(ByVal projectId As Integer, ByVal columnName As String, ByVal userState As Object)
            If (Me.GetSurveyCustomPropertiesOperationCompleted Is Nothing) Then
                Me.GetSurveyCustomPropertiesOperationCompleted = AddressOf Me.OnGetSurveyCustomPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetSurveyCustomProperties", New Object() {projectId, columnName}, Me.GetSurveyCustomPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSurveyCustomPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSurveyCustomPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSurveyCustomPropertiesCompleted(Me, New GetSurveyCustomPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetCustomPropertiesForSurveys", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCustomPropertiesForSurveys(ByVal projectIds() As Integer, ByVal targetPropertyName As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetCustomPropertiesForSurveys", New Object() {projectIds, targetPropertyName})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCustomPropertiesForSurveysAsync(ByVal projectIds() As Integer, ByVal targetPropertyName As String)
            Me.GetCustomPropertiesForSurveysAsync(projectIds, targetPropertyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCustomPropertiesForSurveysAsync(ByVal projectIds() As Integer, ByVal targetPropertyName As String, ByVal userState As Object)
            If (Me.GetCustomPropertiesForSurveysOperationCompleted Is Nothing) Then
                Me.GetCustomPropertiesForSurveysOperationCompleted = AddressOf Me.OnGetCustomPropertiesForSurveysOperationCompleted
            End If
            Me.InvokeAsync("GetCustomPropertiesForSurveys", New Object() {projectIds, targetPropertyName}, Me.GetCustomPropertiesForSurveysOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCustomPropertiesForSurveysOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCustomPropertiesForSurveysCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCustomPropertiesForSurveysCompleted(Me, New GetCustomPropertiesForSurveysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/SetSurveyCustomProperties", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSurveyCustomProperties(ByVal projectId As Integer, ByVal columnName As String, ByVal propertiesXml As String)
            Me.Invoke("SetSurveyCustomProperties", New Object() {projectId, columnName, propertiesXml})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSurveyCustomPropertiesAsync(ByVal projectId As Integer, ByVal columnName As String, ByVal propertiesXml As String)
            Me.SetSurveyCustomPropertiesAsync(projectId, columnName, propertiesXml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSurveyCustomPropertiesAsync(ByVal projectId As Integer, ByVal columnName As String, ByVal propertiesXml As String, ByVal userState As Object)
            If (Me.SetSurveyCustomPropertiesOperationCompleted Is Nothing) Then
                Me.SetSurveyCustomPropertiesOperationCompleted = AddressOf Me.OnSetSurveyCustomPropertiesOperationCompleted
            End If
            Me.InvokeAsync("SetSurveyCustomProperties", New Object() {projectId, columnName, propertiesXml}, Me.SetSurveyCustomPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSurveyCustomPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSurveyCustomPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSurveyCustomPropertiesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetDataMap", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataMap(ByVal projectId As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetDataMap", New Object() {projectId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataMapAsync(ByVal projectId As Integer)
            Me.GetDataMapAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataMapAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetDataMapOperationCompleted Is Nothing) Then
                Me.GetDataMapOperationCompleted = AddressOf Me.OnGetDataMapOperationCompleted
            End If
            Me.InvokeAsync("GetDataMap", New Object() {projectId}, Me.GetDataMapOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataMapOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataMapCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataMapCompleted(Me, New GetDataMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetReportDataMap", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReportDataMap(ByVal projectId As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetReportDataMap", New Object() {projectId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReportDataMapAsync(ByVal projectId As Integer)
            Me.GetReportDataMapAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReportDataMapAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetReportDataMapOperationCompleted Is Nothing) Then
                Me.GetReportDataMapOperationCompleted = AddressOf Me.OnGetReportDataMapOperationCompleted
            End If
            Me.InvokeAsync("GetReportDataMap", New Object() {projectId}, Me.GetReportDataMapOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReportDataMapOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReportDataMapCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReportDataMapCompleted(Me, New GetReportDataMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetColumnList", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetColumnList(ByVal projectId As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetColumnList", New Object() {projectId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetColumnListAsync(ByVal projectId As Integer)
            Me.GetColumnListAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetColumnListAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetColumnListOperationCompleted Is Nothing) Then
                Me.GetColumnListOperationCompleted = AddressOf Me.OnGetColumnListOperationCompleted
            End If
            Me.InvokeAsync("GetColumnList", New Object() {projectId}, Me.GetColumnListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetColumnListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetColumnListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetColumnListCompleted(Me, New GetColumnListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetSurveyInformation", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSurveyInformation(ByVal projectId As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetSurveyInformation", New Object() {projectId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSurveyInformationAsync(ByVal projectId As Integer)
            Me.GetSurveyInformationAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSurveyInformationAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetSurveyInformationOperationCompleted Is Nothing) Then
                Me.GetSurveyInformationOperationCompleted = AddressOf Me.OnGetSurveyInformationOperationCompleted
            End If
            Me.InvokeAsync("GetSurveyInformation", New Object() {projectId}, Me.GetSurveyInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSurveyInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSurveyInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSurveyInformationCompleted(Me, New GetSurveyInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetSurveyFieldInformation", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSurveyFieldInformation(ByVal projectId As Integer, ByVal columnName As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetSurveyFieldInformation", New Object() {projectId, columnName})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSurveyFieldInformationAsync(ByVal projectId As Integer, ByVal columnName As String)
            Me.GetSurveyFieldInformationAsync(projectId, columnName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSurveyFieldInformationAsync(ByVal projectId As Integer, ByVal columnName As String, ByVal userState As Object)
            If (Me.GetSurveyFieldInformationOperationCompleted Is Nothing) Then
                Me.GetSurveyFieldInformationOperationCompleted = AddressOf Me.OnGetSurveyFieldInformationOperationCompleted
            End If
            Me.InvokeAsync("GetSurveyFieldInformation", New Object() {projectId, columnName}, Me.GetSurveyFieldInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSurveyFieldInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSurveyFieldInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSurveyFieldInformationCompleted(Me, New GetSurveyFieldInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/RepublishProject", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RepublishProject(ByVal projectId As Integer, ByVal publishMode As Integer)
            Me.Invoke("RepublishProject", New Object() {projectId, publishMode})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepublishProjectAsync(ByVal projectId As Integer, ByVal publishMode As Integer)
            Me.RepublishProjectAsync(projectId, publishMode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepublishProjectAsync(ByVal projectId As Integer, ByVal publishMode As Integer, ByVal userState As Object)
            If (Me.RepublishProjectOperationCompleted Is Nothing) Then
                Me.RepublishProjectOperationCompleted = AddressOf Me.OnRepublishProjectOperationCompleted
            End If
            Me.InvokeAsync("RepublishProject", New Object() {projectId, publishMode}, Me.RepublishProjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepublishProjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepublishProjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepublishProjectCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/SetEndPageURL", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetEndPageURL(ByVal projectId As Integer, ByVal endPageType As Integer, ByVal URL As String)
            Me.Invoke("SetEndPageURL", New Object() {projectId, endPageType, URL})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetEndPageURLAsync(ByVal projectId As Integer, ByVal endPageType As Integer, ByVal URL As String)
            Me.SetEndPageURLAsync(projectId, endPageType, URL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetEndPageURLAsync(ByVal projectId As Integer, ByVal endPageType As Integer, ByVal URL As String, ByVal userState As Object)
            If (Me.SetEndPageURLOperationCompleted Is Nothing) Then
                Me.SetEndPageURLOperationCompleted = AddressOf Me.OnSetEndPageURLOperationCompleted
            End If
            Me.InvokeAsync("SetEndPageURL", New Object() {projectId, endPageType, URL}, Me.SetEndPageURLOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetEndPageURLOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetEndPageURLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetEndPageURLCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetProjectInformation", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProjectInformation(ByVal projectId As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetProjectInformation", New Object() {projectId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProjectInformationAsync(ByVal projectId As Integer)
            Me.GetProjectInformationAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProjectInformationAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetProjectInformationOperationCompleted Is Nothing) Then
                Me.GetProjectInformationOperationCompleted = AddressOf Me.OnGetProjectInformationOperationCompleted
            End If
            Me.InvokeAsync("GetProjectInformation", New Object() {projectId}, Me.GetProjectInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProjectInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProjectInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProjectInformationCompleted(Me, New GetProjectInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/SetProjectInformation", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetProjectInformation(ByVal projectId As Integer, ByVal xmlString As String)
            Me.Invoke("SetProjectInformation", New Object() {projectId, xmlString})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetProjectInformationAsync(ByVal projectId As Integer, ByVal xmlString As String)
            Me.SetProjectInformationAsync(projectId, xmlString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetProjectInformationAsync(ByVal projectId As Integer, ByVal xmlString As String, ByVal userState As Object)
            If (Me.SetProjectInformationOperationCompleted Is Nothing) Then
                Me.SetProjectInformationOperationCompleted = AddressOf Me.OnSetProjectInformationOperationCompleted
            End If
            Me.InvokeAsync("SetProjectInformation", New Object() {projectId, xmlString}, Me.SetProjectInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetProjectInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetProjectInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetProjectInformationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/DeleteProject", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteProject(ByVal projectId As Integer)
            Me.Invoke("DeleteProject", New Object() {projectId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteProjectAsync(ByVal projectId As Integer)
            Me.DeleteProjectAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteProjectAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.DeleteProjectOperationCompleted Is Nothing) Then
                Me.DeleteProjectOperationCompleted = AddressOf Me.OnDeleteProjectOperationCompleted
            End If
            Me.InvokeAsync("DeleteProject", New Object() {projectId}, Me.DeleteProjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteProjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteProjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteProjectCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetResponseCount", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetResponseCount(ByVal projectId As Integer, ByVal completedOnly As Boolean) As Integer
            Dim results() As Object = Me.Invoke("GetResponseCount", New Object() {projectId, completedOnly})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetResponseCountAsync(ByVal projectId As Integer, ByVal completedOnly As Boolean)
            Me.GetResponseCountAsync(projectId, completedOnly, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetResponseCountAsync(ByVal projectId As Integer, ByVal completedOnly As Boolean, ByVal userState As Object)
            If (Me.GetResponseCountOperationCompleted Is Nothing) Then
                Me.GetResponseCountOperationCompleted = AddressOf Me.OnGetResponseCountOperationCompleted
            End If
            Me.InvokeAsync("GetResponseCount", New Object() {projectId, completedOnly}, Me.GetResponseCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetResponseCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetResponseCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetResponseCountCompleted(Me, New GetResponseCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetSurveyData", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSurveyData(ByVal projectId As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSurveyData", New Object() {projectId})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSurveyDataAsync(ByVal projectId As Integer)
            Me.GetSurveyDataAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSurveyDataAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetSurveyDataOperationCompleted Is Nothing) Then
                Me.GetSurveyDataOperationCompleted = AddressOf Me.OnGetSurveyDataOperationCompleted
            End If
            Me.InvokeAsync("GetSurveyData", New Object() {projectId}, Me.GetSurveyDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSurveyDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSurveyDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSurveyDataCompleted(Me, New GetSurveyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetSurveyDataEx", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSurveyDataEx(ByVal projectId As Integer, ByVal dataMapXml As String, ByVal filterXml As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal startTime As System.Nullable(Of Date), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal endTime As System.Nullable(Of Date), ByVal completedOnly As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSurveyDataEx", New Object() {projectId, dataMapXml, filterXml, startTime, endTime, completedOnly})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSurveyDataExAsync(ByVal projectId As Integer, ByVal dataMapXml As String, ByVal filterXml As String, ByVal startTime As System.Nullable(Of Date), ByVal endTime As System.Nullable(Of Date), ByVal completedOnly As Boolean)
            Me.GetSurveyDataExAsync(projectId, dataMapXml, filterXml, startTime, endTime, completedOnly, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSurveyDataExAsync(ByVal projectId As Integer, ByVal dataMapXml As String, ByVal filterXml As String, ByVal startTime As System.Nullable(Of Date), ByVal endTime As System.Nullable(Of Date), ByVal completedOnly As Boolean, ByVal userState As Object)
            If (Me.GetSurveyDataExOperationCompleted Is Nothing) Then
                Me.GetSurveyDataExOperationCompleted = AddressOf Me.OnGetSurveyDataExOperationCompleted
            End If
            Me.InvokeAsync("GetSurveyDataEx", New Object() {projectId, dataMapXml, filterXml, startTime, endTime, completedOnly}, Me.GetSurveyDataExOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSurveyDataExOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSurveyDataExCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSurveyDataExCompleted(Me, New GetSurveyDataExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetSurveyDataPaged", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSurveyDataPaged(ByVal projectId As Integer, ByVal dataMapXml As String, ByVal filterXml As String, ByVal completedOnly As Boolean, ByVal prevRecordId As Long, ByVal recordCount As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSurveyDataPaged", New Object() {projectId, dataMapXml, filterXml, completedOnly, prevRecordId, recordCount})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSurveyDataPagedAsync(ByVal projectId As Integer, ByVal dataMapXml As String, ByVal filterXml As String, ByVal completedOnly As Boolean, ByVal prevRecordId As Long, ByVal recordCount As Integer)
            Me.GetSurveyDataPagedAsync(projectId, dataMapXml, filterXml, completedOnly, prevRecordId, recordCount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSurveyDataPagedAsync(ByVal projectId As Integer, ByVal dataMapXml As String, ByVal filterXml As String, ByVal completedOnly As Boolean, ByVal prevRecordId As Long, ByVal recordCount As Integer, ByVal userState As Object)
            If (Me.GetSurveyDataPagedOperationCompleted Is Nothing) Then
                Me.GetSurveyDataPagedOperationCompleted = AddressOf Me.OnGetSurveyDataPagedOperationCompleted
            End If
            Me.InvokeAsync("GetSurveyDataPaged", New Object() {projectId, dataMapXml, filterXml, completedOnly, prevRecordId, recordCount}, Me.GetSurveyDataPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSurveyDataPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSurveyDataPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSurveyDataPagedCompleted(Me, New GetSurveyDataPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetResponse", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetResponse(ByVal projectId As Integer, ByVal recordId As Long) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetResponse", New Object() {projectId, recordId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetResponseAsync(ByVal projectId As Integer, ByVal recordId As Long)
            Me.GetResponseAsync(projectId, recordId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetResponseAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal userState As Object)
            If (Me.GetResponseOperationCompleted Is Nothing) Then
                Me.GetResponseOperationCompleted = AddressOf Me.OnGetResponseOperationCompleted
            End If
            Me.InvokeAsync("GetResponse", New Object() {projectId, recordId}, Me.GetResponseOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetResponseOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetResponseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetResponseCompleted(Me, New GetResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/ChangeResponse", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangeResponse(ByVal projectId As Integer, ByVal recordId As Long, ByVal columnName As String, ByVal newValue As String) As String
            Dim results() As Object = Me.Invoke("ChangeResponse", New Object() {projectId, recordId, columnName, newValue})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangeResponseAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal columnName As String, ByVal newValue As String)
            Me.ChangeResponseAsync(projectId, recordId, columnName, newValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangeResponseAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal columnName As String, ByVal newValue As String, ByVal userState As Object)
            If (Me.ChangeResponseOperationCompleted Is Nothing) Then
                Me.ChangeResponseOperationCompleted = AddressOf Me.OnChangeResponseOperationCompleted
            End If
            Me.InvokeAsync("ChangeResponse", New Object() {projectId, recordId, columnName, newValue}, Me.ChangeResponseOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangeResponseOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangeResponseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangeResponseCompleted(Me, New ChangeResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/ChangeMultipleResponses", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangeMultipleResponses(ByVal projectId As Integer, ByVal dataString As String) As String
            Dim results() As Object = Me.Invoke("ChangeMultipleResponses", New Object() {projectId, dataString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangeMultipleResponsesAsync(ByVal projectId As Integer, ByVal dataString As String)
            Me.ChangeMultipleResponsesAsync(projectId, dataString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangeMultipleResponsesAsync(ByVal projectId As Integer, ByVal dataString As String, ByVal userState As Object)
            If (Me.ChangeMultipleResponsesOperationCompleted Is Nothing) Then
                Me.ChangeMultipleResponsesOperationCompleted = AddressOf Me.OnChangeMultipleResponsesOperationCompleted
            End If
            Me.InvokeAsync("ChangeMultipleResponses", New Object() {projectId, dataString}, Me.ChangeMultipleResponsesOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangeMultipleResponsesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangeMultipleResponsesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangeMultipleResponsesCompleted(Me, New ChangeMultipleResponsesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/AddResponse", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddResponse(ByVal projectId As Integer, ByVal dataString As String) As Long
            Dim results() As Object = Me.Invoke("AddResponse", New Object() {projectId, dataString})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddResponseAsync(ByVal projectId As Integer, ByVal dataString As String)
            Me.AddResponseAsync(projectId, dataString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddResponseAsync(ByVal projectId As Integer, ByVal dataString As String, ByVal userState As Object)
            If (Me.AddResponseOperationCompleted Is Nothing) Then
                Me.AddResponseOperationCompleted = AddressOf Me.OnAddResponseOperationCompleted
            End If
            Me.InvokeAsync("AddResponse", New Object() {projectId, dataString}, Me.AddResponseOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddResponseOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddResponseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddResponseCompleted(Me, New AddResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetPreloadData", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPreloadData(ByVal projectId As Integer, ByVal recordId As Long) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetPreloadData", New Object() {projectId, recordId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPreloadDataAsync(ByVal projectId As Integer, ByVal recordId As Long)
            Me.GetPreloadDataAsync(projectId, recordId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPreloadDataAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal userState As Object)
            If (Me.GetPreloadDataOperationCompleted Is Nothing) Then
                Me.GetPreloadDataOperationCompleted = AddressOf Me.OnGetPreloadDataOperationCompleted
            End If
            Me.InvokeAsync("GetPreloadData", New Object() {projectId, recordId}, Me.GetPreloadDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPreloadDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPreloadDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPreloadDataCompleted(Me, New GetPreloadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/SetPreloadData", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetPreloadData(ByVal projectId As Integer, ByVal dataString As String)
            Me.Invoke("SetPreloadData", New Object() {projectId, dataString})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPreloadDataAsync(ByVal projectId As Integer, ByVal dataString As String)
            Me.SetPreloadDataAsync(projectId, dataString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPreloadDataAsync(ByVal projectId As Integer, ByVal dataString As String, ByVal userState As Object)
            If (Me.SetPreloadDataOperationCompleted Is Nothing) Then
                Me.SetPreloadDataOperationCompleted = AddressOf Me.OnSetPreloadDataOperationCompleted
            End If
            Me.InvokeAsync("SetPreloadData", New Object() {projectId, dataString}, Me.SetPreloadDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPreloadDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPreloadDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPreloadDataCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/DeleteParticipant", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteParticipant(ByVal projectId As Integer, ByVal recordId As Long)
            Me.Invoke("DeleteParticipant", New Object() {projectId, recordId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteParticipantAsync(ByVal projectId As Integer, ByVal recordId As Long)
            Me.DeleteParticipantAsync(projectId, recordId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteParticipantAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal userState As Object)
            If (Me.DeleteParticipantOperationCompleted Is Nothing) Then
                Me.DeleteParticipantOperationCompleted = AddressOf Me.OnDeleteParticipantOperationCompleted
            End If
            Me.InvokeAsync("DeleteParticipant", New Object() {projectId, recordId}, Me.DeleteParticipantOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteParticipantOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteParticipantCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteParticipantCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/ClearResponse", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ClearResponse(ByVal projectId As Integer, ByVal recordId As Long)
            Me.Invoke("ClearResponse", New Object() {projectId, recordId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClearResponseAsync(ByVal projectId As Integer, ByVal recordId As Long)
            Me.ClearResponseAsync(projectId, recordId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClearResponseAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal userState As Object)
            If (Me.ClearResponseOperationCompleted Is Nothing) Then
                Me.ClearResponseOperationCompleted = AddressOf Me.OnClearResponseOperationCompleted
            End If
            Me.InvokeAsync("ClearResponse", New Object() {projectId, recordId}, Me.ClearResponseOperationCompleted, userState)
        End Sub
        
        Private Sub OnClearResponseOperationCompleted(ByVal arg As Object)
            If (Not (Me.ClearResponseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ClearResponseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetFrequencyInformation", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFrequencyInformation(ByVal projectId As Integer, ByVal columnName As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetFrequencyInformation", New Object() {projectId, columnName})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFrequencyInformationAsync(ByVal projectId As Integer, ByVal columnName As String)
            Me.GetFrequencyInformationAsync(projectId, columnName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFrequencyInformationAsync(ByVal projectId As Integer, ByVal columnName As String, ByVal userState As Object)
            If (Me.GetFrequencyInformationOperationCompleted Is Nothing) Then
                Me.GetFrequencyInformationOperationCompleted = AddressOf Me.OnGetFrequencyInformationOperationCompleted
            End If
            Me.InvokeAsync("GetFrequencyInformation", New Object() {projectId, columnName}, Me.GetFrequencyInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFrequencyInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFrequencyInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFrequencyInformationCompleted(Me, New GetFrequencyInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetStatistics", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStatistics(ByVal projectId As Integer, ByVal columnName As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetStatistics", New Object() {projectId, columnName})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStatisticsAsync(ByVal projectId As Integer, ByVal columnName As String)
            Me.GetStatisticsAsync(projectId, columnName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStatisticsAsync(ByVal projectId As Integer, ByVal columnName As String, ByVal userState As Object)
            If (Me.GetStatisticsOperationCompleted Is Nothing) Then
                Me.GetStatisticsOperationCompleted = AddressOf Me.OnGetStatisticsOperationCompleted
            End If
            Me.InvokeAsync("GetStatistics", New Object() {projectId, columnName}, Me.GetStatisticsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStatisticsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStatisticsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStatisticsCompleted(Me, New GetStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/AuthorizeMultiplePanelistsForSurvey", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AuthorizeMultiplePanelistsForSurvey(ByVal projectId As Integer, ByVal panelistIdList() As Integer) As Long()
            Dim results() As Object = Me.Invoke("AuthorizeMultiplePanelistsForSurvey", New Object() {projectId, panelistIdList})
            Return CType(results(0),Long())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthorizeMultiplePanelistsForSurveyAsync(ByVal projectId As Integer, ByVal panelistIdList() As Integer)
            Me.AuthorizeMultiplePanelistsForSurveyAsync(projectId, panelistIdList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthorizeMultiplePanelistsForSurveyAsync(ByVal projectId As Integer, ByVal panelistIdList() As Integer, ByVal userState As Object)
            If (Me.AuthorizeMultiplePanelistsForSurveyOperationCompleted Is Nothing) Then
                Me.AuthorizeMultiplePanelistsForSurveyOperationCompleted = AddressOf Me.OnAuthorizeMultiplePanelistsForSurveyOperationCompleted
            End If
            Me.InvokeAsync("AuthorizeMultiplePanelistsForSurvey", New Object() {projectId, panelistIdList}, Me.AuthorizeMultiplePanelistsForSurveyOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthorizeMultiplePanelistsForSurveyOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthorizeMultiplePanelistsForSurveyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthorizeMultiplePanelistsForSurveyCompleted(Me, New AuthorizeMultiplePanelistsForSurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/AuthorizePanelistForSurvey", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AuthorizePanelistForSurvey(ByVal projectId As Integer, ByVal panelistID As Integer, ByVal userkey1 As String, ByVal userkey2 As String, ByVal userkey3 As String) As Long
            Dim results() As Object = Me.Invoke("AuthorizePanelistForSurvey", New Object() {projectId, panelistID, userkey1, userkey2, userkey3})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthorizePanelistForSurveyAsync(ByVal projectId As Integer, ByVal panelistID As Integer, ByVal userkey1 As String, ByVal userkey2 As String, ByVal userkey3 As String)
            Me.AuthorizePanelistForSurveyAsync(projectId, panelistID, userkey1, userkey2, userkey3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthorizePanelistForSurveyAsync(ByVal projectId As Integer, ByVal panelistID As Integer, ByVal userkey1 As String, ByVal userkey2 As String, ByVal userkey3 As String, ByVal userState As Object)
            If (Me.AuthorizePanelistForSurveyOperationCompleted Is Nothing) Then
                Me.AuthorizePanelistForSurveyOperationCompleted = AddressOf Me.OnAuthorizePanelistForSurveyOperationCompleted
            End If
            Me.InvokeAsync("AuthorizePanelistForSurvey", New Object() {projectId, panelistID, userkey1, userkey2, userkey3}, Me.AuthorizePanelistForSurveyOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthorizePanelistForSurveyOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthorizePanelistForSurveyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthorizePanelistForSurveyCompleted(Me, New AuthorizePanelistForSurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/AuthorizeParticipantForSurvey", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AuthorizeParticipantForSurvey(ByVal projectId As Integer, ByVal email As String, ByVal userkey1 As String, ByVal userkey2 As String, ByVal userkey3 As String, ByVal culture As String) As Long
            Dim results() As Object = Me.Invoke("AuthorizeParticipantForSurvey", New Object() {projectId, email, userkey1, userkey2, userkey3, culture})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthorizeParticipantForSurveyAsync(ByVal projectId As Integer, ByVal email As String, ByVal userkey1 As String, ByVal userkey2 As String, ByVal userkey3 As String, ByVal culture As String)
            Me.AuthorizeParticipantForSurveyAsync(projectId, email, userkey1, userkey2, userkey3, culture, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthorizeParticipantForSurveyAsync(ByVal projectId As Integer, ByVal email As String, ByVal userkey1 As String, ByVal userkey2 As String, ByVal userkey3 As String, ByVal culture As String, ByVal userState As Object)
            If (Me.AuthorizeParticipantForSurveyOperationCompleted Is Nothing) Then
                Me.AuthorizeParticipantForSurveyOperationCompleted = AddressOf Me.OnAuthorizeParticipantForSurveyOperationCompleted
            End If
            Me.InvokeAsync("AuthorizeParticipantForSurvey", New Object() {projectId, email, userkey1, userkey2, userkey3, culture}, Me.AuthorizeParticipantForSurveyOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthorizeParticipantForSurveyOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthorizeParticipantForSurveyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthorizeParticipantForSurveyCompleted(Me, New AuthorizeParticipantForSurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetAuthorizedParticipantCount", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuthorizedParticipantCount(ByVal projectId As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetAuthorizedParticipantCount", New Object() {projectId})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAuthorizedParticipantCountAsync(ByVal projectId As Integer)
            Me.GetAuthorizedParticipantCountAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAuthorizedParticipantCountAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetAuthorizedParticipantCountOperationCompleted Is Nothing) Then
                Me.GetAuthorizedParticipantCountOperationCompleted = AddressOf Me.OnGetAuthorizedParticipantCountOperationCompleted
            End If
            Me.InvokeAsync("GetAuthorizedParticipantCount", New Object() {projectId}, Me.GetAuthorizedParticipantCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAuthorizedParticipantCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAuthorizedParticipantCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAuthorizedParticipantCountCompleted(Me, New GetAuthorizedParticipantCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetParticipantDataEx", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParticipantDataEx(ByVal projectId As Integer, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal inviteStatus As System.Nullable(Of Integer), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal startTime As System.Nullable(Of Date), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal endTime As System.Nullable(Of Date), ByVal completedOnly As Boolean) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetParticipantDataEx", New Object() {projectId, inviteStatus, startTime, endTime, completedOnly})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParticipantDataExAsync(ByVal projectId As Integer, ByVal inviteStatus As System.Nullable(Of Integer), ByVal startTime As System.Nullable(Of Date), ByVal endTime As System.Nullable(Of Date), ByVal completedOnly As Boolean)
            Me.GetParticipantDataExAsync(projectId, inviteStatus, startTime, endTime, completedOnly, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParticipantDataExAsync(ByVal projectId As Integer, ByVal inviteStatus As System.Nullable(Of Integer), ByVal startTime As System.Nullable(Of Date), ByVal endTime As System.Nullable(Of Date), ByVal completedOnly As Boolean, ByVal userState As Object)
            If (Me.GetParticipantDataExOperationCompleted Is Nothing) Then
                Me.GetParticipantDataExOperationCompleted = AddressOf Me.OnGetParticipantDataExOperationCompleted
            End If
            Me.InvokeAsync("GetParticipantDataEx", New Object() {projectId, inviteStatus, startTime, endTime, completedOnly}, Me.GetParticipantDataExOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParticipantDataExOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParticipantDataExCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParticipantDataExCompleted(Me, New GetParticipantDataExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetParticipantDataPaged", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParticipantDataPaged(ByVal projectId As Integer, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal inviteStatus As System.Nullable(Of Integer), ByVal surveyStatus As ParticipantStatus, ByVal startRecordId As Long, ByVal recordCount As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetParticipantDataPaged", New Object() {projectId, inviteStatus, surveyStatus, startRecordId, recordCount})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParticipantDataPagedAsync(ByVal projectId As Integer, ByVal inviteStatus As System.Nullable(Of Integer), ByVal surveyStatus As ParticipantStatus, ByVal startRecordId As Long, ByVal recordCount As Integer)
            Me.GetParticipantDataPagedAsync(projectId, inviteStatus, surveyStatus, startRecordId, recordCount, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParticipantDataPagedAsync(ByVal projectId As Integer, ByVal inviteStatus As System.Nullable(Of Integer), ByVal surveyStatus As ParticipantStatus, ByVal startRecordId As Long, ByVal recordCount As Integer, ByVal userState As Object)
            If (Me.GetParticipantDataPagedOperationCompleted Is Nothing) Then
                Me.GetParticipantDataPagedOperationCompleted = AddressOf Me.OnGetParticipantDataPagedOperationCompleted
            End If
            Me.InvokeAsync("GetParticipantDataPaged", New Object() {projectId, inviteStatus, surveyStatus, startRecordId, recordCount}, Me.GetParticipantDataPagedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParticipantDataPagedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParticipantDataPagedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParticipantDataPagedCompleted(Me, New GetParticipantDataPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetParticipantData", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParticipantData(ByVal projectId As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetParticipantData", New Object() {projectId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParticipantDataAsync(ByVal projectId As Integer)
            Me.GetParticipantDataAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParticipantDataAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.GetParticipantDataOperationCompleted Is Nothing) Then
                Me.GetParticipantDataOperationCompleted = AddressOf Me.OnGetParticipantDataOperationCompleted
            End If
            Me.InvokeAsync("GetParticipantData", New Object() {projectId}, Me.GetParticipantDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParticipantDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParticipantDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParticipantDataCompleted(Me, New GetParticipantDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetParticipantInformation", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParticipantInformation(ByVal projectId As Integer, ByVal recordId As Long) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetParticipantInformation", New Object() {projectId, recordId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParticipantInformationAsync(ByVal projectId As Integer, ByVal recordId As Long)
            Me.GetParticipantInformationAsync(projectId, recordId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParticipantInformationAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal userState As Object)
            If (Me.GetParticipantInformationOperationCompleted Is Nothing) Then
                Me.GetParticipantInformationOperationCompleted = AddressOf Me.OnGetParticipantInformationOperationCompleted
            End If
            Me.InvokeAsync("GetParticipantInformation", New Object() {projectId, recordId}, Me.GetParticipantInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParticipantInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParticipantInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParticipantInformationCompleted(Me, New GetParticipantInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/SetParticipantInformation", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetParticipantInformation(ByVal projectId As Integer, ByVal dataString As String)
            Me.Invoke("SetParticipantInformation", New Object() {projectId, dataString})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetParticipantInformationAsync(ByVal projectId As Integer, ByVal dataString As String)
            Me.SetParticipantInformationAsync(projectId, dataString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetParticipantInformationAsync(ByVal projectId As Integer, ByVal dataString As String, ByVal userState As Object)
            If (Me.SetParticipantInformationOperationCompleted Is Nothing) Then
                Me.SetParticipantInformationOperationCompleted = AddressOf Me.OnSetParticipantInformationOperationCompleted
            End If
            Me.InvokeAsync("SetParticipantInformation", New Object() {projectId, dataString}, Me.SetParticipantInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetParticipantInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetParticipantInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetParticipantInformationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/FindPanelistRecord", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindPanelistRecord(ByVal projectId As Integer, ByVal panelistId As Integer, ByVal key1 As String, ByVal key2 As String, ByVal key3 As String) As Long
            Dim results() As Object = Me.Invoke("FindPanelistRecord", New Object() {projectId, panelistId, key1, key2, key3})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindPanelistRecordAsync(ByVal projectId As Integer, ByVal panelistId As Integer, ByVal key1 As String, ByVal key2 As String, ByVal key3 As String)
            Me.FindPanelistRecordAsync(projectId, panelistId, key1, key2, key3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindPanelistRecordAsync(ByVal projectId As Integer, ByVal panelistId As Integer, ByVal key1 As String, ByVal key2 As String, ByVal key3 As String, ByVal userState As Object)
            If (Me.FindPanelistRecordOperationCompleted Is Nothing) Then
                Me.FindPanelistRecordOperationCompleted = AddressOf Me.OnFindPanelistRecordOperationCompleted
            End If
            Me.InvokeAsync("FindPanelistRecord", New Object() {projectId, panelistId, key1, key2, key3}, Me.FindPanelistRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindPanelistRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindPanelistRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindPanelistRecordCompleted(Me, New FindPanelistRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetInvitationText", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInvitationText(ByVal projectId As Integer, ByVal recordId As Long, ByVal invitationType As Integer) As String
            Dim results() As Object = Me.Invoke("GetInvitationText", New Object() {projectId, recordId, invitationType})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInvitationTextAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal invitationType As Integer)
            Me.GetInvitationTextAsync(projectId, recordId, invitationType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInvitationTextAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal invitationType As Integer, ByVal userState As Object)
            If (Me.GetInvitationTextOperationCompleted Is Nothing) Then
                Me.GetInvitationTextOperationCompleted = AddressOf Me.OnGetInvitationTextOperationCompleted
            End If
            Me.InvokeAsync("GetInvitationText", New Object() {projectId, recordId, invitationType}, Me.GetInvitationTextOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInvitationTextOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInvitationTextCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInvitationTextCompleted(Me, New GetInvitationTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/GetInvitationTemplate", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInvitationTemplate(ByVal projectId As Integer, ByVal invitationType As Integer) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetInvitationTemplate", New Object() {projectId, invitationType})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInvitationTemplateAsync(ByVal projectId As Integer, ByVal invitationType As Integer)
            Me.GetInvitationTemplateAsync(projectId, invitationType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInvitationTemplateAsync(ByVal projectId As Integer, ByVal invitationType As Integer, ByVal userState As Object)
            If (Me.GetInvitationTemplateOperationCompleted Is Nothing) Then
                Me.GetInvitationTemplateOperationCompleted = AddressOf Me.OnGetInvitationTemplateOperationCompleted
            End If
            Me.InvokeAsync("GetInvitationTemplate", New Object() {projectId, invitationType}, Me.GetInvitationTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInvitationTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInvitationTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInvitationTemplateCompleted(Me, New GetInvitationTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/SetInvitationTemplate", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetInvitationTemplate(ByVal projectId As Integer, ByVal subject As String, ByVal htmlBody As String, ByVal textBody As String, ByVal culture As String, ByVal invitationType As Integer)
            Me.Invoke("SetInvitationTemplate", New Object() {projectId, subject, htmlBody, textBody, culture, invitationType})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetInvitationTemplateAsync(ByVal projectId As Integer, ByVal subject As String, ByVal htmlBody As String, ByVal textBody As String, ByVal culture As String, ByVal invitationType As Integer)
            Me.SetInvitationTemplateAsync(projectId, subject, htmlBody, textBody, culture, invitationType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetInvitationTemplateAsync(ByVal projectId As Integer, ByVal subject As String, ByVal htmlBody As String, ByVal textBody As String, ByVal culture As String, ByVal invitationType As Integer, ByVal userState As Object)
            If (Me.SetInvitationTemplateOperationCompleted Is Nothing) Then
                Me.SetInvitationTemplateOperationCompleted = AddressOf Me.OnSetInvitationTemplateOperationCompleted
            End If
            Me.InvokeAsync("SetInvitationTemplate", New Object() {projectId, subject, htmlBody, textBody, culture, invitationType}, Me.SetInvitationTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetInvitationTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetInvitationTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetInvitationTemplateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/SetInvitationStatus", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetInvitationStatus(ByVal projectId As Integer, ByVal recordId As Long, ByVal invitationType As Integer)
            Me.Invoke("SetInvitationStatus", New Object() {projectId, recordId, invitationType})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetInvitationStatusAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal invitationType As Integer)
            Me.SetInvitationStatusAsync(projectId, recordId, invitationType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetInvitationStatusAsync(ByVal projectId As Integer, ByVal recordId As Long, ByVal invitationType As Integer, ByVal userState As Object)
            If (Me.SetInvitationStatusOperationCompleted Is Nothing) Then
                Me.SetInvitationStatusOperationCompleted = AddressOf Me.OnSetInvitationStatusOperationCompleted
            End If
            Me.InvokeAsync("SetInvitationStatus", New Object() {projectId, recordId, invitationType}, Me.SetInvitationStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetInvitationStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetInvitationStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetInvitationStatusCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/SendInvitations", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SendInvitations(ByVal projectId As Integer, ByVal invitationType As Integer)
            Me.Invoke("SendInvitations", New Object() {projectId, invitationType})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendInvitationsAsync(ByVal projectId As Integer, ByVal invitationType As Integer)
            Me.SendInvitationsAsync(projectId, invitationType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendInvitationsAsync(ByVal projectId As Integer, ByVal invitationType As Integer, ByVal userState As Object)
            If (Me.SendInvitationsOperationCompleted Is Nothing) Then
                Me.SendInvitationsOperationCompleted = AddressOf Me.OnSendInvitationsOperationCompleted
            End If
            Me.InvokeAsync("SendInvitations", New Object() {projectId, invitationType}, Me.SendInvitationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendInvitationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendInvitationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendInvitationsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/UpdateBorrowedQuestions", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateBorrowedQuestions(ByVal projectId As Integer)
            Me.Invoke("UpdateBorrowedQuestions", New Object() {projectId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateBorrowedQuestionsAsync(ByVal projectId As Integer)
            Me.UpdateBorrowedQuestionsAsync(projectId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateBorrowedQuestionsAsync(ByVal projectId As Integer, ByVal userState As Object)
            If (Me.UpdateBorrowedQuestionsOperationCompleted Is Nothing) Then
                Me.UpdateBorrowedQuestionsOperationCompleted = AddressOf Me.OnUpdateBorrowedQuestionsOperationCompleted
            End If
            Me.InvokeAsync("UpdateBorrowedQuestions", New Object() {projectId}, Me.UpdateBorrowedQuestionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateBorrowedQuestionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateBorrowedQuestionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateBorrowedQuestionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/Ping", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ping() As String
            Dim results() As Object = Me.Invoke("Ping", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PingAsync()
            Me.PingAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PingAsync(ByVal userState As Object)
            If (Me.PingOperationCompleted Is Nothing) Then
                Me.PingOperationCompleted = AddressOf Me.OnPingOperationCompleted
            End If
            Me.InvokeAsync("Ping", New Object(-1) {}, Me.PingOperationCompleted, userState)
        End Sub
        
        Private Sub OnPingOperationCompleted(ByVal arg As Object)
            If (Not (Me.PingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PingCompleted(Me, New PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.perseus.com/Pdc.WS/Login", RequestNamespace:="http://www.perseus.com/Pdc.WS", ResponseNamespace:="http://www.perseus.com/Pdc.WS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login(ByVal userName As String, ByVal password As String) As String
            Dim results() As Object = Me.Invoke("Login", New Object() {userName, password})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal userName As String, ByVal password As String)
            Me.LoginAsync(userName, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal userName As String, ByVal password As String, ByVal userState As Object)
            If (Me.LoginOperationCompleted Is Nothing) Then
                Me.LoginOperationCompleted = AddressOf Me.OnLoginOperationCompleted
            End If
            Me.InvokeAsync("Login", New Object() {userName, password}, Me.LoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginCompleted(Me, New LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.perseus.com/Pdc.WS")>  _
    Public Enum ParticipantStatus
        
        '''<remarks/>
        Any
        
        '''<remarks/>
        NotStarted
        
        '''<remarks/>
        Started
        
        '''<remarks/>
        Completed
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetSurveyListCompletedEventHandler(ByVal sender As Object, ByVal e As GetSurveyListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSurveyListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCommonSurveyListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCommonSurveyListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCommonSurveyListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProfileListCompletedEventHandler(ByVal sender As Object, ByVal e As GetProfileListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProfileListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CreateSurveyProjectCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSurveyProjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSurveyProjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CreatePanelProfileCompletedEventHandler(ByVal sender As Object, ByVal e As CreatePanelProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreatePanelProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetQuestionnaireCompletedEventHandler(ByVal sender As Object, ByVal e As GetQuestionnaireCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQuestionnaireCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetPublishedQuestionnaireCompletedEventHandler(ByVal sender As Object, ByVal e As GetPublishedQuestionnaireCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPublishedQuestionnaireCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetQuestionnaireCompletedEventHandler(ByVal sender As Object, ByVal e As SetQuestionnaireCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetQuestionnaireCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetQuestionnaireVersionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetQuestionnaireVersionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQuestionnaireVersionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RevertQuestionnaireCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetSurveyCustomPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSurveyCustomPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSurveyCustomPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCustomPropertiesForSurveysCompletedEventHandler(ByVal sender As Object, ByVal e As GetCustomPropertiesForSurveysCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCustomPropertiesForSurveysCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetSurveyCustomPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetDataMapCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataMapCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataMapCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetReportDataMapCompletedEventHandler(ByVal sender As Object, ByVal e As GetReportDataMapCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReportDataMapCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetColumnListCompletedEventHandler(ByVal sender As Object, ByVal e As GetColumnListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetColumnListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetSurveyInformationCompletedEventHandler(ByVal sender As Object, ByVal e As GetSurveyInformationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSurveyInformationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetSurveyFieldInformationCompletedEventHandler(ByVal sender As Object, ByVal e As GetSurveyFieldInformationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSurveyFieldInformationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RepublishProjectCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetEndPageURLCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetProjectInformationCompletedEventHandler(ByVal sender As Object, ByVal e As GetProjectInformationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProjectInformationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetProjectInformationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub DeleteProjectCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetResponseCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetResponseCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetResponseCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetSurveyDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetSurveyDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSurveyDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetSurveyDataExCompletedEventHandler(ByVal sender As Object, ByVal e As GetSurveyDataExCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSurveyDataExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetSurveyDataPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetSurveyDataPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSurveyDataPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetResponseCompletedEventHandler(ByVal sender As Object, ByVal e As GetResponseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetResponseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ChangeResponseCompletedEventHandler(ByVal sender As Object, ByVal e As ChangeResponseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangeResponseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ChangeMultipleResponsesCompletedEventHandler(ByVal sender As Object, ByVal e As ChangeMultipleResponsesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangeMultipleResponsesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddResponseCompletedEventHandler(ByVal sender As Object, ByVal e As AddResponseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddResponseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetPreloadDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetPreloadDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPreloadDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetPreloadDataCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub DeleteParticipantCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ClearResponseCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetFrequencyInformationCompletedEventHandler(ByVal sender As Object, ByVal e As GetFrequencyInformationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFrequencyInformationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetStatisticsCompletedEventHandler(ByVal sender As Object, ByVal e As GetStatisticsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStatisticsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AuthorizeMultiplePanelistsForSurveyCompletedEventHandler(ByVal sender As Object, ByVal e As AuthorizeMultiplePanelistsForSurveyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthorizeMultiplePanelistsForSurveyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AuthorizePanelistForSurveyCompletedEventHandler(ByVal sender As Object, ByVal e As AuthorizePanelistForSurveyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthorizePanelistForSurveyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AuthorizeParticipantForSurveyCompletedEventHandler(ByVal sender As Object, ByVal e As AuthorizeParticipantForSurveyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthorizeParticipantForSurveyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAuthorizedParticipantCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetAuthorizedParticipantCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAuthorizedParticipantCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetParticipantDataExCompletedEventHandler(ByVal sender As Object, ByVal e As GetParticipantDataExCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParticipantDataExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetParticipantDataPagedCompletedEventHandler(ByVal sender As Object, ByVal e As GetParticipantDataPagedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParticipantDataPagedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetParticipantDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetParticipantDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParticipantDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetParticipantInformationCompletedEventHandler(ByVal sender As Object, ByVal e As GetParticipantInformationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParticipantInformationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetParticipantInformationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub FindPanelistRecordCompletedEventHandler(ByVal sender As Object, ByVal e As FindPanelistRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindPanelistRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetInvitationTextCompletedEventHandler(ByVal sender As Object, ByVal e As GetInvitationTextCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInvitationTextCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetInvitationTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As GetInvitationTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInvitationTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetInvitationTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetInvitationStatusCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendInvitationsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateBorrowedQuestionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub PingCompletedEventHandler(ByVal sender As Object, ByVal e As PingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub LoginCompletedEventHandler(ByVal sender As Object, ByVal e As LoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
