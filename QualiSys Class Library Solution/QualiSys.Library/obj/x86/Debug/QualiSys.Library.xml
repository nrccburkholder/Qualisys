<?xml version="1.0"?>
<doc>
<assembly>
<name>
Nrc.QualiSys.Library
</name>
</assembly>
<members>
<member name="P:Nrc.QualiSys.Library.CriteriaPhrase.CriteriaStatementId">
	<summary>
 The ID of the criteria object this phrase belongs to
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaPhrase.Clauses">
	<summary>
 Collection of criteria clauses
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaPhrase.Id">
	<summary>
 The ID
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.CriteriaPhrase.GetByCriteriaStatementId(System.Int32)">
	<summary>
 Gets all phrases for a criteria object
 </summary>
	<param name="criteriaStatementId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.CriteriaPhrase.Clone">
	<summary>
 Creates a deep copy of the object
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyLock.Id">
	<summary>
 The unique Id of the lock
 </summary>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyLock.LockCategory">
	<summary>
 The category of the lock
 </summary>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyLock.LockValueId">
	<summary>
 The id value of the entity that is locked
 </summary>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyLock.UserName">
	<summary>
 The name of the user that has the lock
 </summary>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyLock.MachineName">
	<summary>
 The name of the machine where the lock was acquired
 </summary>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyLock.ProcessName">
	<summary>
 The name of the process that acquired the lock
 </summary>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyLock.AcquisitionTime">
	<summary>
 The time that the lock was acquired
 </summary>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyLock.ExpirationTime">
	<summary>
 The time that the lock will expire if not renewed.
 </summary>
</member><member name="T:Nrc.QualiSys.Library.ConcurrencyLock">
	<summary>
 Represents a lock on an abstract entity to prevent multiple concurrent access
 </summary>
</member><member name="F:Nrc.QualiSys.Library.ConcurrencyManager.mInstance">
	<summary>The singleton instance</summary>
</member><member name="F:Nrc.QualiSys.Library.ConcurrencyManager.mRenewalIntervalMinutes">
	<summary>The interval in minutes between the timer that checks for needed lock renewals</summary>
</member><member name="F:Nrc.QualiSys.Library.ConcurrencyManager.mLockExpirationMinutes">
	<summary>The amount of time to acquire a lock before it needs to be renewed</summary>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyManager.Manager">
	<summary>Provides access to the singleton instance</summary>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.#ctor">
	<summary>Constructor is private for singleton class</summary>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.AcquireLock(Nrc.QualiSys.Library.ConcurrencyLockCategory,System.Int32,System.String,System.String,System.String)">
	<summary>
 Attempts to acquire a lock on the specified category and value
 </summary>
	<param name="lockCategory">The lock category for which to aquire the lock</param>
	<param name="lockValueId">The unique identifier for the entity being locked</param>
	<param name="userName">The name of the user acquiring the lock</param>
	<param name="machineName">The name of the machine used to acquire the lock</param>
	<param name="processName">The name of the process used to acquire the lock</param>
	<returns>Return True if the lock was acquired, otherwise False</returns>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.ReleaseLock(Nrc.QualiSys.Library.ConcurrencyLockCategory,System.Int32)">
	<summary>
 Releases a lock held by this ConcurrencyManager
 </summary>
	<param name="lockCategory">The category of the lock to release</param>
	<param name="lockValueId">The unique identifier for the entity that is locked</param>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.ReleaseAllLocks">
	<summary>
 Releases any locks currently held by the ConcurrencyManager
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.ViewLock(Nrc.QualiSys.Library.ConcurrencyLockCategory,System.Int32)">
	<summary>
 Retrieves a <see cref="T:Nrc.QualiSys.Library.ConcurrencyLock">ConcurrencyLock</see> object for the specified category and value if it is locked
 </summary>
	<param name="lockCategory">The category of the lock to retrieve</param>
	<param name="lockValueId">The unique identifier for the entity that is locked</param>
	<returns>Returns a reference to the <see cref="T:Nrc.QualiSys.Library.ConcurrencyLock">ConcurrencyLock</see> object if the 
 entity is locked, otherwise returns NULL</returns>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.ViewAllLocks">
	<summary>
 Retrieves a collection of all the <see cref="T:Nrc.QualiSys.Library.ConcurrencyLock">ConcurrencyLock</see> objects that currently exist in the datastore
 </summary>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.ViewAllLocks(Nrc.QualiSys.Library.ConcurrencyLockCategory)">
	<summary>
 Retrieves a collection of all the <see cref="T:Nrc.QualiSys.Library.ConcurrencyLock">ConcurrencyLock</see> objects that currently 
 exist in the datastore for the specified lock category
 </summary>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.IsLocked(Nrc.QualiSys.Library.ConcurrencyLockCategory,System.Int32)">
	<summary>
 Returns True if the entity specified by the lock category and the value identifier is currently locked
 </summary>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.RenewalCheck(System.Object)">
	<summary>
 Checks all locks currently held by the ConcurrencyManager and renews them if needed
 </summary>
	<param name="state"></param>
	<remarks>This method is called periodically by the timer that tracks lock renewals</remarks>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.RenewLock(Nrc.QualiSys.Library.ConcurrencyLock)">
	<summary>
 Renews the lock specified
 </summary>
	<param name="lock">The lock object to be renewed</param>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.FindLock(Nrc.QualiSys.Library.ConcurrencyLockCategory,System.Int32)">
	<summary>
 Searches the current list of locks held by the ConcurrencyManager for a specific lock
 </summary>
	<param name="lockCategory">The category of the lock to look for</param>
	<param name="lockValueId">The value of the lock to look for</param>
	<returns>Returns the lock object if it exists, otherwise returns NULL</returns>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyManager.ServerTime.CurrentTime">
	<summary>
 The current time on the server
 </summary>
</member><member name="P:Nrc.QualiSys.Library.ConcurrencyManager.ServerTime.TimeSinceSync">
	<summary>
 The amount of time that has passed since synchronization
 </summary>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.ServerTime.#ctor">
	<summary>Private constructor for factory class</summary>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.ServerTime.Synchronize">
	<summary>
 Synchronizes the ServerTime object with the current time on the server
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.ConcurrencyManager.ServerTime.GetServerTime">
	<summary>
 Factory method for creating an instance.  This is used mainly so users can understand
 that the constructor requires some computation and I/O
 </summary>
</member><member name="T:Nrc.QualiSys.Library.ConcurrencyManager.ServerTime">
	<summary>
 A class for synchronizing the local system time with a database server time.
 </summary>
	<remarks>This class is important if multiple, independent client machines need to be working
 on the same schedule</remarks>
</member><member name="T:Nrc.QualiSys.Library.ConcurrencyManager">
	<summary>
 The ConcurrencyManager class is used to acquire and release <see cref="T:Nrc.QualiSys.Library.ConcurrencyLock">ConcurrencyLocks</see>
 on any abstract entity to prevent multiple concurrent access.
 </summary>
	<remarks>
 This is a singleton class and cannot be directly instantiated.  All functionality of this
 clas is exposed through shared methods.
 </remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriodScheduledSample.FinishedUpdating">
	<summary>
 Called after updating the database.  This will mark the object as clean.
 </summary>
	<remarks>This is only needed when not using the save method of the class.  The save method will
 automatically mark as clean.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriodScheduledSample.FinishedInserting">
	<summary>
 Called after inserting a new item in the database.  This will mark the object as old.
 </summary>
	<remarks>This is only needed when not using the save method of the class.  The save method will
 automatically mark as old.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriodScheduledSampleCollection.RemoveBySampleNumber(System.Int32)">
	<summary>
 Removes the item in the collection that contains the specified Sample Number
 </summary>
	<param name="i"></param>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.QDispositionCollection">
 -----------------------------------------------------------------------------
 Project	 : PopulationManagerLibrary
 Class	 : PopulationManager.Library.DispositionCollection
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Disposition objects.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Language.Id">
 -----------------------------------------------------------------------------
 <summary>
 The QualiSys LangId for this language.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Language.Name">
 -----------------------------------------------------------------------------
 <summary>
 The name of this language.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Language.DisplayLabel">
 -----------------------------------------------------------------------------
 <summary>
 The display label for this language.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Language.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Default constructor.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Language.GetLanguage(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieves and populates a language object from the database.
 </summary>
	<param name="languageId">The ID of the language to retrieve</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Language.GetLanguagesAvailableForSurvey(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieves a collection of all the available languages for a survey.
 </summary>
 -----------------------------------------------------------------------------

</member><member name="T:Nrc.QualiSys.Library.Language">
	<summary>
 Represents a QualiSys language used in survey generation.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleUnitServiceType.IsDirty">
	<summary>
 Indicates if the changes have been made to the object that have not been saved to the database.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnitServiceType.ResetDirtyFlag">
	<summary>
 Resets the is Dirty Flag to false.
 </summary>
	<remarks>This method should be called after saving changes.</remarks>
</member><member name="P:Nrc.QualiSys.Library.StudyDatasetDateRange.TableId">
	<summary>
 The unique identifier of the StudyTable to which the field belongs
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyDatasetDateRange.FieldId">
	<summary>
 The unique identifier of the StudyDataTableColumn that the date range is for
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyDatasetDateRange.MinimumDate">
	<summary>
 The minimum value found in the StudyDataset for the particular StudyTableColumn
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyDatasetDateRange.MaximumDate">
	<summary>
 The maximum value found in the StudyDataset for the particular StudyTableColumn
 </summary>
</member><member name="T:Nrc.QualiSys.Library.StudyDatasetDateRange">
	<summary>
 This class represents a date range summary for a StudyDataset
 </summary>
	<remarks>Study datasets may contain various date fields.  When a dataset is created
 it is important to summarize the range of date values contained in the dataset
 so that the information can be accessed without expensive queries against large
 database tables</remarks>
</member><member name="T:Nrc.QualiSys.Library.SampleSelectionType">
	<summary>
 Enumerates the Qualisys supported sampleunit selection types sampleunits
 </summary>
	<remarks>The order of these is critical.  They must be ordered based 
 on how the order they should be sampled in.
 </remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.LegacySampleSet.PerformLegacySample(Nrc.QualiSys.Library.Survey,System.Collections.ObjectModel.Collection{Nrc.QualiSys.Library.StudyDataset},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Nrc.QualiSys.Library.Employee,Nrc.QualiSys.Library.SamplePeriod)">
	<summary>
 Performs a Static or Dyanamic Legacy sample
 </summary>
</member><member name="M:Nrc.QualiSys.Library.QualisysParams.GetParamKeyName(Nrc.QualiSys.Library.QualisysParams.ParamKey)">
	<summary>Added "Approval Mode" key by Arman</summary>
	<param name="key"></param>
	<returns></returns>
</member><member name="T:Nrc.QualiSys.Library.CoverLetterItemType">
	<summary>
 Enumerates the Cover Letter Item types
 </summary>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.ModeSectionMapping.NeedsDelete">
	<summary>
 Indicates if a unit needs to be deleted from the database.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.ModeSectionMapping.UpdateObj">
	<summary>
 This method will traverse the Mapping Grid and take appropriate action on each unit.  The action 
 will be an insert, update, delete, or nothing.
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.ModeSectionMapping.GetChanges">
	<summary>
 Gets a list of all changes that have been made to the object since it was loaded or created.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.StandardMethodology.Id">
	<summary>The unique identifier of the Standard Methodology</summary>
</member><member name="P:Nrc.QualiSys.Library.StandardMethodology.Name">
	<summary>The name of the Standard Methodology</summary>
</member><member name="P:Nrc.QualiSys.Library.StandardMethodology.IsCustomizable">
	<summary>Returns True if the Standard Methodology can be customized by adding/modifying steps</summary>
</member><member name="M:Nrc.QualiSys.Library.StandardMethodology.Get(System.Int32)">
	<summary>
 Retrieves a single Standard Methodology object
 </summary>
	<param name="standardMethodologyId">The unique identifier of the Standard Methodolgy</param>
</member><member name="M:Nrc.QualiSys.Library.StandardMethodology.GetBySurveyType(Nrc.QualiSys.Library.SurveyTypes,Nrc.QualiSys.Library.SubTypeList)">
	<summary>
 Retrieves a collection of all the Standard Methodologies for a given Survey Type
 </summary>
	<param name="srvyType">The Survey Type</param>
	<returns></returns>
</member><member name="M:Nrc.QualiSys.Library.StandardMethodology.GetMethodologySteps">
	<summary>
 Returns a collection of MethodologySteps built from this Standard Methodology
 </summary>
</member><member name="T:Nrc.QualiSys.Library.StandardMethodology">
	<summary>
 Represents a Qualisys Standard Methodology for survey data collection
 </summary>
</member><member name="P:Nrc.QualiSys.Library.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Nrc.QualiSys.Library.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:Nrc.QualiSys.Library.My.Resources.Resources.SamplingLocked16">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Nrc.QualiSys.Library.My.Resources.Resources.SamplingUnlocked16">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="T:Nrc.QualiSys.Library.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.Id">
	<summary>
 The QualiSys SampleUnit_id
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.SamplePlanId">
	<summary>
 ID for the sampleplan
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.Name">
	<summary>
 The name of the sample unit
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.SurveyId">
	<summary>
 The ID of the survey to which this sample unit belongs
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.ParentSampleUnitId">
	<summary>
 The ID of the parent sample unit
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.Target">
	<summary>
 The targeted response count for this sample unit
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.Priority">
	<summary>
 The priority level set for this unit
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.SelectionType">
	<summary>
 The type of unit
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.InitialResponseRate">
	<summary>
 This is the initial response rate supplied by the user.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>The initial response rate is used to determine the amount of outgo needed for new
 surveys.  Older surveys use the historical response rate to determine the amount of outgo needed.
 </remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.HistoricalResponseRate">
	<summary>
 This is the historical response rate calculated by the system.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>The historical response rate is used to determine the amount of outgo needed.
 </remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.IsSuppressed">
	<summary>
 Is this unit supposed to be hidden on our websites
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.IsHcahps">
	<summary>
 Is this an HCAHPS compliant unit
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.DontSampleUnit">
	<summary>
 Are we supposed to sample this unit
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Only used in the static plus sampling algorithm</remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.Service">
	<summary>
 Returns the sampleunitservicetype object for this unit.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>The sampleunitservicetype object contains a hierarchical list of service types for the unit.</remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.CriteriaStatementId">
	<summary>
 The ID for the criteria that this unit uses.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.Survey">
	<summary>
 The survey that this unit is part of.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.Facility">
	<summary>
 The facility that this unit belongs to.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.FacilityId">
	<summary>
 The ID of the facility.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.Criteria">
	<summary>
 The criteria object that this unit uses.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.DisplayLabel">
	<summary>
 Returns a display label for this survey consisting of the name and ID
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.ParentUnit">
	<summary>
 The Parent Sample Unit object associated with this sample unit
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.ChildUnits">
	<summary>
 The Child SampleUnit objects associated with this sample unit
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.IsNew">
	<summary>
 Indicates whether this is a new unit.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.IsDeletable">
	<summary>
 Indicates if the unit can be deleted from the database.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.UndeletableReasons">
	<summary>
 This is a collection of messages indicating why a unit cannot be deleted.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.NeedsDelete">
	<summary>
 Indicates if a unit needs to be deleted from the database.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.CanHaveChildUnit">
	<summary>
 Indicates if a unit can have children.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Only Exclusive units can have children.</remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.CannotAddChildUnitReasons">
	<summary>
 Collection of messages indicating why a unit cannot have children.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.IsDirty">
	<summary>
 Indicates if the changes have been made to the object that have not been saved to the database.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleUnit.CAHPSTypeName">
	<summary>
 The name of the sample unit
 </summary>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.#ctor">
	<summary>
 Default constructor
 </summary>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.#ctor(Nrc.QualiSys.Library.Survey)">
	<summary>
 Constructor to use if adding a new root unit
 </summary>
	<param name="survey"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.#ctor(Nrc.QualiSys.Library.SampleUnit)">
	<summary>
 Constructor to use if adding a new unit other than the root
 </summary>
	<param name="parentUnit"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.#ctor(Nrc.QualiSys.Library.Survey,Nrc.QualiSys.Library.SampleUnit,System.Collections.ObjectModel.Collection{Nrc.QualiSys.Library.SampleUnit})">
	<summary>
 Constructor to initialize the private instance data for this object
 </summary>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.GetSampleUnitsBySurveyId(Nrc.QualiSys.Library.Survey)">
	<summary>
 Returns a collection of all units belonging to a survey.
 </summary>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.GetAllSampleUnitsForSurvey(Nrc.QualiSys.Library.Survey)">
	<summary>
 Returns all sample units for a survey without parent/child relationship
 </summary>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.Get(System.Int32,Nrc.QualiSys.Library.Survey)">
	<summary>
 Returns an instance of a specific unit.
 </summary>
	<param name="sampleUnitId"></param>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.GetSampleUnitsByParentId(System.Int32,Nrc.QualiSys.Library.Survey)">
	<summary>
 Returns all child units belonging to a parent.
 </summary>
	<param name="parentSampleUnitId"></param>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.Update(System.Int32)">
	<summary>
 This method will traverse the tree of units and take appropriate action on each unit.  The action 
 will be an insert, update, delete, or nothing.
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.RemoveDeletedChildren(Nrc.QualiSys.Library.SampleUnit)">
	<summary>
 This method will recursively remove deleted units from their parent's child unit collection
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.GetEntireTreeChanges(Nrc.QualiSys.Library.SampleUnit)">
	<summary>
 Recursively loops through child units and gets changes for each unit
 </summary>
	<param name="unit"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.GetChanges">
	<summary>
 Gets a list of all changes that have been made to the object since it was loaded or created.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.GetServiceTypeChanges(System.Collections.Generic.List{Nrc.QualiSys.Library.AuditLogChange},Nrc.QualiSys.Library.SampleUnit)">
	<summary>
 Gets all changes for the service types assigned to this unit.
 </summary>
	<param name="changes"></param>
	<param name="original"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.Delete">
	<summary>
 Sets the needsDeleted flag on a unit and all of its children.
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.ResetDirtyFlag">
	<summary>
 Resets the is Dirty Flag to false.
 </summary>
	<remarks>This method should be called after saving changes.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.ReorderPriority(System.Collections.ObjectModel.Collection{Nrc.QualiSys.Library.SampleUnit})">
	<summary>
 Reorders the priority, removing any gaps in priority numbering
 </summary>
	<param name="units"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.FillPriorityList(System.Collections.ObjectModel.Collection{Nrc.QualiSys.Library.SampleUnit},System.Collections.Generic.SortedDictionary{System.Int32,System.Int32})">
	<summary>
 Fills the priority list.
 </summary>
	<param name="units"></param>
	<param name="list"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnit.ReprioritizeUnit(System.Collections.ObjectModel.Collection{Nrc.QualiSys.Library.SampleUnit},System.Collections.Generic.SortedDictionary{System.Int32,System.Int32})">
	<summary>
 Reprioritizes the units.
 </summary>
	<param name="units"></param>
	<param name="lookupTable"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.MedicareNumber.ForceRecalculate(System.DateTime,System.Int32,System.Boolean@)">
	<summary>Ignore business rules and recalculate the proportion.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareNumber.RecalculateProportion(System.DateTime,System.Int32,System.Boolean@)">
	<summary>Recalculate the proportion if business rules allow it.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareNumber.NeedToRecalculateProportion(System.DateTime)">
	<summary>This method determines if the medicare number is ready and able to calculate a new proportion.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareNumber.GetOrderedRecalcDates">
	<summary>Helper method to order the global recal dates.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareNumber.CalculateProportion(System.Boolean,System.DateTime,System.Int32,System.Boolean@)">
	<summary>Determine which type of calculation to use and calculate the proportion.</summary>
	<param name="forced"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareNumber.CalculateProportionUsingHistorical(System.Boolean,System.DateTime,System.Int32,System.Boolean@)">
	<summary>Calculate the historical proportion using historical values.</summary>
	<param name="forced"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareNumber.CalculateProportionUsingEstimates(System.Boolean,System.DateTime,System.Int32,System.Boolean@)">
	<summary>Calculate the proportion using estimated values.</summary>
	<param name="forced"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MailingStepMethod.Id">
	<summary>The unique identifier of the MailingStepMethod</summary>
</member><member name="P:Nrc.QualiSys.Library.MailingStepMethod.Name">
	<summary>The name of the MailingStepMethod</summary>
</member><member name="P:Nrc.QualiSys.Library.StudyTable.Id">
	<summary>
 The QualiSys MetaTable_id for this table
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyTable.Name">
	<summary>
 The name of the table
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyTable.StudyId">
	<summary>
 The Study ID of the table.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyTable.Description">
	<summary>
 The table description
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyTable.IsView">
	<summary>
 Returns True if this table is actually a View
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyTable.Columns">
	<summary>
 The collection of columns contained in this table.
 </summary>
</member><member name="M:Nrc.QualiSys.Library.StudyTable.#ctor">
	<summary>
 Default constructor
 </summary>
</member><member name="M:Nrc.QualiSys.Library.StudyTable.GetAllStudyTables(System.Int32)">
	<summary>
 Returns a collection of all the tables belonging to a study
 </summary>
	<param name="studyId">The Study ID</param>
</member><member name="M:Nrc.QualiSys.Library.StudyTable.Get(System.Int32)">
	<summary>
 Returns the selected table
 </summary>
	<param name="tableId">The table ID</param>
</member><member name="M:Nrc.QualiSys.Library.StudyTable.Query(System.String,System.Int32)">
	<summary>
 Queries the table and returns a datatable of the resulting records
 </summary>
	<param name="whereClause">The "where" clause of the SQL query.</param>
	<param name="rowsToReturn">The maximum number of rows to return.</param>
</member><member name="T:Nrc.QualiSys.Library.StudyTable">
	<summary>
 Represents a QualiSys Study Table containing patient data.
 </summary>
</member><member name="T:Nrc.QualiSys.Library.DataProvider.MedicareRecalcHistoryProvider">
	<summary>Abstract class for DAL layer.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.QDisposition.Name">
	<summary>
 The name of this disposition
 </summary>
</member><member name="P:Nrc.QualiSys.Library.QDisposition.Id">
	<summary>
 The disposition ID
 </summary>
</member><member name="P:Nrc.QualiSys.Library.QDisposition.Action">
	<summary>
 The action to be taken when this disposition is selected
 </summary>
</member><member name="P:Nrc.QualiSys.Library.QDisposition.ActionCategory">
	<summary>
 The category that this disposition's action fall under.
 </summary>
</member><member name="M:Nrc.QualiSys.Library.QDisposition.#ctor">
	<summary>
 Default constructor.
 </summary>
</member><member name="M:Nrc.QualiSys.Library.QDisposition.GetCategory(Nrc.QualiSys.Library.DispositionAction)">
 -----------------------------------------------------------------------------
 <summary>
 Converts an ActionId to a category string
 </summary>
	<param name="action"></param>
	<returns></returns>
	<remarks>This is just a hard-coded list of values.
 </remarks>
	<history>
 	[JCamp]	12/10/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.QDisposition.GetCategoryOrder(Nrc.QualiSys.Library.DispositionAction)">
 -----------------------------------------------------------------------------
 <summary>
 Converts an actionId to a category order
 </summary>
	<param name="action"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[JCamp]	12/10/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.QDisposition.GetDispositionsBySurvey(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Returns a collection of available dispositions for this mailing.
 </summary>
	<param name="surveyId">The QualiSys Survey_id</param>
	<returns>A DispositionCollection containing all the dispositions</returns>
	<remarks>
	</remarks>
	<history>
 	[JCamp]	09/22/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.QDisposition.CompareTo(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
 Implementation of IComparable.CompareTo so that these objects can be sorted
 in Category,DispositionId order
 </summary>
	<param name="obj">The object that will be compared to this one</param>
	<returns>
 1 if this is "greater than" obj
 0 if the two objects are equal
 -1 if this is "less than" obj
 </returns>
	<remarks>
	</remarks>
	<history>
 	[JCamp]	12/10/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:Nrc.QualiSys.Library.QDisposition">
	<summary>
 Represents a disposition that a respondant can specify when they make 
 a request through the Survey Preferences Application or call a 1-800 number.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.CoverLetter.Id">
	<summary>The unique identifier of the Cover Letter</summary>
</member><member name="P:Nrc.QualiSys.Library.CoverLetter.Name">
	<summary>The name of the Cover Letter</summary>
</member><member name="T:Nrc.QualiSys.Library.CoverLetter">
	<summary>
 Represents a Cover Letter for a survey
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Facility.GetByClientId(System.Int32)">
	<summary>
 Returns a list of Facility objects for the given Client 
 </summary>
	<param name="clientId">The Client ID by which to filter the facility list</param>
</member><member name="P:Nrc.QualiSys.Library.CoverLetterItem.ItemID">
	<summary>The unique identifier of the Cover Letter Item</summary>
</member><member name="P:Nrc.QualiSys.Library.CoverLetterItem.ItemType">
	<summary>The type of the cover letter item</summary>
</member><member name="M:Nrc.QualiSys.Library.CriteriaInValue.#ctor">
	<summary>
 Creates a new object with no value
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.CriteriaInValue.#ctor(System.String)">
	<summary>
 Creates a new object with the specified value
 </summary>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaInValue.CriteriaClauseId">
	<summary>
 The ID of the criteria clause that this value belongs to
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaInValue.Value">
	<summary>
 The value
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaInValue.Id">
	<summary>
 The ID
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStepType.Id">
	<summary>The unique identifier of the MethodologyStepType</summary>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStepType.Name">
	<summary>The name of the MethodologyStepType</summary>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStepType.IsSurvey">
	<summary>Returns True if the step is a survey</summary>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStepType.IsThankYouLetter">
	<summary>Returns True if the step is a Thank You Letter</summary>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStepType.StepMethodId">
	<summary>Returns the Step Method ID</summary>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStepType.IsCoverLetterRequired">
	<summary>Returns True if a cover letter must be specified for this step</summary>
</member><member name="T:Nrc.QualiSys.Library.MethodologyStepType">
	<summary>
 Represents one of the standard Types of MethodologySteps.
 </summary>
	<remarks>The MethodologyStepType defines important attributes about the MethodologyStep.
 This class is used like a template to copy from when creating MethodologyStep objects</remarks>
</member><member name="T:Nrc.QualiSys.Library.CountryCode">
 -----------------------------------------------------------------------------
 <summary>
 Represents the list of QualiSys recognized countries.
 </summary>
	<remarks>
 This list should coincide with the QualiSys country code values
 </remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:Nrc.QualiSys.Library.DispositionAction">
 -----------------------------------------------------------------------------
 <summary>
 Represents the various actions that can be taken when a disposition is selected.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Study.Id">
	<summary>
 The QualiSys Study_id for this study.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.Study.ClientId">
	<summary>
 The QualiSys Client_id for this study.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.Study.Name">
	<summary>
 The name of this study
 </summary>
</member><member name="P:Nrc.QualiSys.Library.Study.Description">
	<summary>
 The description of this study.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.Study.AccountDirectorEmployeeId">
	<summary>
 The employee_id of the account director for this study.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.Study.DisplayLabel">
	<summary>
 A display label for this study
 </summary>
</member><member name="P:Nrc.QualiSys.Library.Study.IsDirty">
	<summary>
 Returns True if this object has been modified since it was retrived from the database.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.Study.Client">
	<summary>
 The Client object associated with this study.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.Study.AccountDirector">
	<summary>
 The Employee object for the account director associated with this study.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.Study.AllowDelete">
	<summary>
 Returns True if the study can be deleted
 </summary>
</member><member name="M:Nrc.QualiSys.Library.Study.#ctor">
	<summary>
 Default constructor.
 </summary>
</member><member name="M:Nrc.QualiSys.Library.Study.#ctor(Nrc.QualiSys.Library.Client)">
	<summary>
 Constructor to initialize the private instance data for this object.
 </summary>
	<param name="parentClient">The client object to which this study belongs</param>
</member><member name="M:Nrc.QualiSys.Library.Study.GetStudy(System.Int32)">
	<summary>
 Retrieves and populates a study object from the database
 </summary>
	<param name="studyId">The ID of the study to retrieve.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
</member><member name="M:Nrc.QualiSys.Library.Study.GetStudiesByClientId(Nrc.QualiSys.Library.Client)">
	<summary>
 Retrieves a collection of study objects that belong to the specified client
 </summary>
	<param name="client">The Client</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Study.GetStudyTables">
	<summary>
 Returns a collection of StudyTable objects belonging to this study.
 </summary>
</member><member name="T:Nrc.QualiSys.Library.Study">
	<summary>
 Represents a Study in the QualiSys system
 </summary>
</member><member name="F:Nrc.QualiSys.Library.CutoffFieldType.SampleCreate">
	<summary>Categorizes data by the date on which the sample was created</summary>
</member><member name="F:Nrc.QualiSys.Library.CutoffFieldType.ReturnDate">
	<summary>Categorizes data by the date on which the survey was returned</summary>
</member><member name="F:Nrc.QualiSys.Library.CutoffFieldType.CustomMetafield">
	<summary>Categorizes data by a date metafield in the study specific tables</summary>
</member><member name="F:Nrc.QualiSys.Library.CutoffFieldType.NotApplicable">
	<summary>Date field is not applicable</summary>
</member><member name="T:Nrc.QualiSys.Library.CutoffFieldType">
	<summary>
 Enumerates the possible types of Qualisys Metafields that can be
 used to define reporting periods
 </summary>
</member><member name="M:Nrc.QualiSys.Library.VendorFile_VoviciDetail.MarkDelete">
	<summary>
 Marks the object to be deleted during the next save
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.VendorFile_VoviciDetail.MarkUnDelete">
	<summary>
 Resets the object's IsDeleted flag to false
 </summary>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.SampleSet.SamplingMethod">
	<summary>
 Enumerates the Qualisys supported methods of determining 
 how many individuals should be sampled
 </summary>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.SampleSet.RemovedRule">
	<summary>
 Enumerates the Removal Rules for sampling
 </summary>
</member><member name="T:Nrc.QualiSys.Library.SampleSet.UnitSelectType">
	<summary>
 Enumerates the Selection Types for sampling
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.Id">
	<summary>
 The unique identifier of this SampleSet
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.SamplePlanId">
	<summary>
 The ID of the SamplePlan used to create this SampleSet
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.SurveyId">
	<summary>
 The ID of the survey that this SampleSet belongs to
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.CreatorEmployeeId">
	<summary>
 The ID of the user who created this SampleSet
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.DateCreated">
	<summary>
 The date on which the SampleSet was created
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.SampleStartDate">
	<summary>
 The starting date of the period's expected encounters
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.SampleEndDate">
	<summary>
 The ending date of the period's expected encounters
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.IsOversample">
	<summary>
 Indicates if this SampleSet is an over-sample
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.IsFirstSampleInPeriod">
	<summary>
 Indicates if this is the first SampleSet in the SamplePeriod
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.ScheduledDate">
	<summary>
 The date on which this SampleSet was scheduled for generation
 </summary>
	<remarks>Note: this is not the date that SampleSet generation occurs, rather,
 it is the date on which scheduling was performed</remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.SamplingAlgorithm">
	<summary>
 The SamplingAlgorithm that was used to create this SampleSet
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.HCAHPSOverSample">
	<summary>
 Indicates whether or not we oversampled the HCAHPS unit
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.DateRangeFrom">
	<summary>
 The start date of the range to be sampled
 </summary>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.DateRangeTo">
	<summary>
 The end date of the range to be sampled
 </summary>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.IsScheduledForGeneration">
	<summary>
 Indicates if the SampleSet has been scheduled for generation
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.IsDirty">
	<summary>
 Boolean value indicating whether changes have been made to the object since it was loaded from the database.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.RandomSeed">
	<summary>
 The seed value that was used for randomization in the SampleSet
 </summary>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.GetSampleSet(System.Int32)">
	<summary>
 Retrieves a given SampleSet object from the datastore
 </summary>
	<param name="sampleSetId">The unique identifier of the SampleSet to retrieve</param>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.DeleteSampleSet(System.Int32)">
	<summary>
 Deletes a specific SampleSet object from the datastore
 </summary>
	<param name="SampleSetId">The unique identifier of the SampleSet to delete</param>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.CreateSampleSet(System.Int32,System.Collections.ObjectModel.Collection{Nrc.QualiSys.Library.StudyDataset},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Nrc.QualiSys.Library.Employee,Nrc.QualiSys.Library.SamplePeriod,System.Boolean,System.Int32)">
	<summary>
 Creates a new SampleSet and performs the random sample
 </summary>
	<param name="surveyId">The ID of the survey to sample</param>
	<param name="datasets">A collection of StudyDatasets to sample</param>
	<param name="startDate">The starting date of the sample encounters</param>
	<param name="endDate">The ending date of the sample encounters</param>
	<param name="creator">The Employee object of the creating user</param>
	<param name="period">The SamplePeriod to which the new sample will belong</param>
	<param name="hcahpsOverSample">Specifies whether or not to oversample the HCAHPS unit if this is an oversample</param>
	<param name="specificSampleSeedStaticPlus">Pass in a greater or equal than zero sample seed to be used by StaticPlus</param>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.ScheduleSampleSetGeneration(System.DateTime)">
	<summary>
 Schedules the SampleSet for survey generation
 </summary>
	<param name="generationDate">The date on which the SampleSet will generate</param>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.UnscheduleSampleSetGeneration">
	<summary>
 Unschedules the SampleSet for survey generation
 </summary>
	<remarks>A SampleSet can only be unscheduled if the surveys have not generated
 If the surveys have generated then an exception will be thrown.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.SamplingMethodLabel(Nrc.QualiSys.Library.SampleSet.SamplingMethod)">
	<summary>
 Gets the label for the indicated sampling method value
 </summary>
	<param name="method"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.SamplingMethodFromLabel(System.String)">
	<summary>
 Gets the enum value for the indicated sampling method label
 </summary>
	<param name="method"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.ResetDirtyFlag">
	<summary>
 Resets the is Dirty Flag to false.
 </summary>
	<remarks>This method should be called after saving changes.</remarks>
</member><member name="T:Nrc.QualiSys.Library.SampleSet">
	<summary>
 Represents a Qualisys SampleSet
 </summary>
	<remarks>A SampleSet is a set of i</remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleUnitLinking.#ctor">
	<summary>
 Default constructor
 </summary>
</member><member name="M:Nrc.QualiSys.Library.BusinessRule.#ctor(Nrc.QualiSys.Library.Survey,Nrc.QualiSys.Library.Criteria)">
	<summary>
 Creates a new instance of a business rule for a given survey using the supplied criteria
 </summary>
	<param name="survey"></param>
	<param name="criteria"></param>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.BusinessRule.Survey">
	<summary>
 The survey that this business rule belongs to.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.BusinessRule.NeedsDeleted">
	<summary>
 Indicates that this object needs to be deleted from the database
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.BusinessRule.CriteriaId">
	<summary>
 The ID for the criteria.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.BusinessRule.Id">
	<summary>
 The ID of this business rule
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.BusinessRule.IsDirty">
	<summary>
 Boolean value indicating whether changes have been made to the object since it was loaded from the database.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.BusinessRule.Criteria">
	<summary>
 The criteria object for this business rule.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.BusinessRule.RuleType">
	<summary>
 What type of rule is this business rule.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.BusinessRule.Name">
	<summary>
 The name for the business rule object.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>The name for the business rule object is actually the name of the criteria object it contains.</remarks>
</member><member name="M:Nrc.QualiSys.Library.BusinessRule.Get(System.Int32,Nrc.QualiSys.Library.Survey)">
	<summary>
 Gets an instance of an existing business rule
 </summary>
	<param name="businessRuleId"></param>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.BusinessRule.GetBySurvey(Nrc.QualiSys.Library.Survey)">
	<summary>
 Gets all business rules for a survey
 </summary>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.BusinessRule.GetChanges">
	<summary>
 Gets a list of all changes that have been made to the object since it was loaded or created.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.BusinessRule.ResetDirtyFlag">
	<summary>
 Resets the is Dirty Flag to false.
 </summary>
	<remarks>This method should be called after saving changes.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.PerformStaticPlusSample(Nrc.QualiSys.Library.Survey,Nrc.QualiSys.Library.SamplePeriod,System.Collections.ObjectModel.Collection{Nrc.QualiSys.Library.StudyDataset},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Nrc.QualiSys.Library.Employee,System.Boolean,System.Int32)">
	<summary>
 This is the base method called to perform a static plus sample
 </summary>
	<param name="srvy">The Survey object being sampled</param>
	<param name="period">The SamplePeriod object for this sample</param>
	<param name="datasets">The collection of StudyDataset objects for this sample</param>
	<param name="startDate">The start date for the encounters to be sampled</param>
	<param name="endDate">The end date for the encounters to be sampled</param>
	<param name="creator">The QualiSys Employee executing the sample</param>
	<param name="hcahpsOverSample">Specifies whether or not to oversample the HCAHPS unit if this is an oversample</param>
	<param name="specificSampleSeed">Pass in a number greater or equal than zero to use it a sample seed, otherwise a random one is generated</param>
	<returns>Returns the ID of the newly created SampleSet</returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.RecalcHCAHPSOutGoNeeded(System.Int32,System.Collections.Generic.Dictionary{System.Int32,Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.SampleSetUnit},System.Nullable{System.DateTime},System.Boolean,Nrc.QualiSys.Library.SamplePeriod)">
	<summary>
 This method recalculates the outgo needed for all HCAHPS units based on the HCAHPS proportion calculated for that start date.
 </summary>
	<param name="sampleSetId">The ID for the SampleSet being executed.</param>
	<param name="sampleSetUnits">The sample set unit dictionary being used for this sample.</param>
	<param name="startDate">The starting date for the encounters being sampled.</param>
	<param name="sampleHCAHPSUnit">Specifies whether or not we are sampling the HCAHPS unit.</param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.ExecuteSample(Nrc.Framework.Data.SafeDataReader,System.Collections.Generic.Dictionary{System.Int32,Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.SampleSetUnit},System.Boolean,System.Int32,Nrc.QualiSys.Library.Survey)">
	<summary>
 This sub will loop through each pop record and sample it.  It will also call
 methods that store information needed for the SPW.
 </summary>
	<param name="rdr"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.BuildSampleUnitOutGoNeeded(Nrc.QualiSys.Library.Survey,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
	<summary>
 This procedure will return a key value pair sampleunit Ids and samplesetunits.  
 Each unit will reference its parent and children.  This set of items will be used
 when we implement the sampling algorithm.  We will use it to traverse the tree, determine
 outgo needed, evaluate priority, etc.
 </summary>
	<param name="survey"></param>
	<param name="outGoList"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.SortEncountersAndEncounterUnits(Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.Pop)">
	<summary>
 This sub will order the encounters and Encounter units
 </summary>
	<param name="popRecord"></param>
	<remarks>Since we want the sort to be descending, we must call the sort method and 
 then call the reverse method.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.ExecuteIndividualSample(Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.Pop,System.Int32,System.Collections.Generic.Dictionary{System.Int32,Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.Encounter},Nrc.QualiSys.Library.Survey)">
	<summary>
 This sub will order the encounters and encounter units, execute the sample,  update 
 any count information needed for the SPW, and insert a record in the database
 </summary>
	<param name="popRecord"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.ExecuteNonExclusiveUnitSample(Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.Encounter)">
	<summary>
 This sub will sample the NonExclusive Units
 </summary>
	<param name="enc"></param>
	<remarks>We do not have to do a descendant sample because 
 Non exclusive units cannot have children.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.ExecuteExclusiveUnitSample(Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.Encounter,System.Int32)">
	<summary>
 This sub samples Exclusive Units
 </summary>
	<param name="enc"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.ExecuteMinorModuleUnitSample(Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.Encounter)">
	<summary>
 This sub samples minor module units
 </summary>
	<param name="enc"></param>
	<remarks>A minor module unit can only be sampled if one or more of its siblings
 where sampled.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.ExecuteAncestralSample(Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.SampleSetUnit,Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.Encounter)">
	<summary>
 This sub will the parent unit for the unit indicated.
 The parent unit must be an exclusive unit, and must not already be sampled
 If the child unit still needs outgo, mark it as direct.  If it does not need
 outgo, mark it as indirect
 </summary>
	<param name="parentUnit"></param>
	<param name="enc"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.ExecuteDescendantSample(Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.SampleSetUnit,Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.Encounter,System.Int32)">
	<summary>
 This sub will sample 1 child unit for the unit indicated.
 The child unit must be an exclusive unit.
 If the child unit still needs outgo, mark it as direct.  If it does not need
 outgo, mark it as indirect
 </summary>
	<param name="sampledUnit"></param>
	<param name="enc"></param>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.SampleSetUnit.HcaphsSampledCount">
	<summary>
 This is a count of the number of people sampled who were also sampled for an HCAHPS unit
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.SampleSetUnit.DQRules">
	<summary>
 The first item is the DQ Rule Id, and the second is the count
 </summary>
	<value></value>
	<returns>If you need to increment the count for a DQRule you should
 use IncrementDQRuleCount.  Do not try to directly increment the Dictionary.
 The dictionary may not include the DQRule you are trying to increment.</returns>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.SampleSetUnit">
	<summary>
 The sampleSetUnit Class contains information about the state of a unit during the sampling process.
 </summary>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.EncounterUnit">
	<summary>
 The EncounterUnit structure contains information about a specific unit that an encounter is 
 eligible for.
 </summary>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.Pop">
	<summary>
 This class contains information about an pop record used during sampling
 </summary>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.SampleSet.StaticPlusAlgorithm.Encounter">
	<summary>
 This class contains information about an encounter used during sampling
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.BusinessCollection`1.BeginLoad">
	<summary>
 Begins the initial loading of the collection without tracking changes
 </summary>
</member><member name="M:Nrc.QualiSys.Library.BusinessCollection`1.EndLoad">
	<summary>
 Completes the initial loading of the collection and after EndLoad() is called changes will be tracked
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.BusinessCollection`1.CommitChanges">
	<summary>
 Resets the dirty flag on the collection and removes the history of added and removed items
 </summary>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.IMedicareGlobalCalculationDefault">
	<summary>Allows DAL to assign key field to object.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.MedicareGlobalCalculationDefaultId">
	<summary>PK</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.RespRate">
	<summary>Percentage which we think we will get returns from our surveys.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.IneligibleRate">
	<summary>Percentage of returns that we think will be invalid.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.ProportionChangeThreshold">
	<summary>The allowed percentage change between recalculation that will lock sampling.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.AnnualReturnTarget">
	<summary>Estimate of how many returns are needed.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.ForceCensusSamplePercentage">
	<summary>If we are not getting enough returns per sample period to effective you a proportion below 100 percent, this will force the proportion to 100.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.MedicareCalcDateCollection">
	<summary>A collection of dates that will help determine when to recalculate.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.RespRateDisplay">
	<summary>Formatted resp rate so we can format and bind to UI.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.IneligibleRateDisplay">
	<summary>Formatted ineligible rate so we can format and bind to UI.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.ProportionChangeThresholdDisplay">
	<summary>Formatted propchangethreshold so we can format and bind to UI.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.ForceCensusSamplePercentageDisplay">
	<summary>Formatted force census percentage so we can format and bind to ui.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.NewMedicareGlobalCalculationDefault">
	<summary>Factory to create a new object.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.Get(System.Int32)">
	<summary>Factory to get by PK.</summary>
	<param name="MedicareGlobalCalculationDefaultId"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.GetAll">
	<summary>Factory to get all from DAL into a collection.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.ValidateAll">
	<summary>This method allows validation of this object as well as its child objects-collections.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.AddBusinessRules">
	<summary>Adds pointers to methods used to validation objects properties.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.Insert">
	<summary>DAL Insert</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.Update">
	<summary>Dal Update</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.DeleteImmediate">
	<summary>DAL Delete</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.Save">
	<summary>Save the object, then sets up its child collection to be saved.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.PercentageRule(System.Object,Nrc.Framework.BusinessLogic.Validation.RuleArgs)">
	<summary>Checks that percentage is between 0 and 100</summary>
	<param name="target"></param>
	<param name="e"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault.ValidateAnnualTarget(System.Object,Nrc.Framework.BusinessLogic.Validation.RuleArgs)">
	<summary>Checks that return target is between 0 and 2 billion.</summary>
	<param name="target"></param>
	<param name="e"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="T:Nrc.QualiSys.Library.MedicareGlobalCalculationDefault">
	<summary>Represents MedicareGlobalCalcDefaults which are the default enteries from which Medicare values will be set.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="T:Nrc.QualiSys.Library.MethodologyStepCollection">
	<summary>
 A custom collection of MethodologyStep objects
 </summary>
	<remarks>This is a custom collection so that it can keep an IsDirty flag</remarks>
</member><member name="T:Nrc.QualiSys.Library.Employee">
	<summary>
 Represents an Employee in the QualiSys system
 </summary>
</member><member name="T:Nrc.QualiSys.Library.QualisysParam">
	<summary>
 Represents a configurable parameter in the QualiSys system.
 </summary>
</member><member name="M:Nrc.QualiSys.Library.StudyTableColumnCollection.ResetDirtyFlag">
	<summary>
 Resets the is Dirty Flag to false.
 </summary>
	<remarks>This method should be called after saving changes.</remarks>
</member><member name="P:Nrc.QualiSys.Library.StudyDataset.Id">
	<summary>
 The unique identifier for the Dataset
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyDataset.StudyId">
	<summary>
 The ID of the study to which this Dataset belongs
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.StudyDataset.DateLoaded">
	<summary>
 The date on which the Dataset was loaded
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyDataset.RecordCount">
	<summary>
 The number of records that were contained in the Dataset
 </summary>
</member><member name="P:Nrc.QualiSys.Library.StudyDataset.DateRanges">
	<summary>
 A collection of summary date ranges for each of the date fields in the Dataset
 </summary>
	<remarks>For each Dataset loaded we store a summary of the minimum and maximum 
 value contained in any of the date metafields.  This helps eliminate expensive
 queries to access the information later</remarks>
</member><member name="P:Nrc.QualiSys.Library.StudyDataset.HasBeenSampled">
	<summary>
 Returns True if a sample has been created from this Dataset
 </summary>
</member><member name="M:Nrc.QualiSys.Library.StudyDataset.#ctor">
	<summary>
 Initializes the StudyDataset object
 </summary>
</member><member name="T:Nrc.QualiSys.Library.StudyDataset">
	<summary>
 Represents a Study Dataset loaded into Qualisys
 </summary>
	<remarks>Datasets loaded into Qualisys are Study specific.  This class represents a 
 summarization of the data contained in the Dataset</remarks>
</member><member name="M:Nrc.QualiSys.Library.Criteria.#ctor(System.Int32)">
	<summary>
 Creates a new study object for the specified study
 </summary>
	<param name="studyId"></param>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.Criteria.Id">
	<summary>
 The ID
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.Criteria.Name">
	<summary>
 The name
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.Criteria.StudyId">
	<summary>
 The ID for the study that this criteria belongs to
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.Criteria.CriteriaStatement">
	<summary>
 This property returns the current value for the string value of the statement.  It should be used
 instead of the InitialCriteriaStatement if changes have been made to the object.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.Criteria.CriteriaStatementDisplay(System.Boolean,System.Boolean)">
	<summary>
 Builds the criteria string using the collections of phrases
 </summary>
	<param name="useAliasedColumnNames"></param>
	<param name="useLineFeedPhrase"></param>
	<value></value>
	<returns></returns>
	<remarks>By setting different values for the parameters, the consumer can create a statement that is suitable
 for displaying to the user, or a statement that is appropriate for saving in the criteriastmt table in the database.</remarks>
</member><member name="P:Nrc.QualiSys.Library.Criteria.IsValid">
	<summary>
 Verifies that a criteria statement and study ID are present
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.Criteria.Phrases">
	<summary>
 Contains a collection of criteria phrases
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.Criteria.InitialCriteriaStatement">
	<summary>
 This property is the string value of the statement prior to changes being made
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.Criteria.IsDirty">
	<summary>
 Boolean value indicating whether changes have been made to the object since it was loaded from the database.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Criteria.BuildCriteriaStatement(System.Boolean,System.Boolean)">
	<summary>
 This function creates the actual string value for criteria 
 </summary>
	<param name="useAliasedColumnNames"></param>
	<param name="useLineFeedPhrase"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Criteria.BuildInList(Nrc.QualiSys.Library.CriteriaClause)">
	<summary>
 Converts the collection of in list values into a comma separated string
 </summary>
	<param name="clause"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Criteria.ApplyParenthesis(Nrc.QualiSys.Library.CriteriaClause,System.String)">
	<summary>
 Determines whether parenthesis need to be added to the value by looking at the data type of the column
 </summary>
	<param name="clause"></param>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Criteria.Get(System.Int32)">
	<summary>
 Retrieves and populates a criteria statement object from the database
 </summary>
	<param name="criteriaStatementId">The ID of the criteria statement to retreive</param>
</member><member name="M:Nrc.QualiSys.Library.Criteria.GetChanges">
	<summary>
 Gets a list of all changes that have been made to the object since it was loaded or created.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Criteria.Clone">
	<summary>
 Creates a deep copy of the object
 </summary>
	<returns></returns>
	<remarks>This is typically used to allow us to rollback changes to the object if the user decides to cancel
 changes they are currently making.</remarks>
</member><member name="M:Nrc.QualiSys.Library.Criteria.UndoChanges(Nrc.QualiSys.Library.Criteria)">
	<summary>
 Restores the object to a prior state.
 </summary>
	<param name="original"></param>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.CriteriaClause.Operators">
	<summary>
 List of operators that can be used when creating a criteria clause.
 </summary>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.Id">
	<summary>
 The ID
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.CriteriaStatementId">
	<summary>
 The ID of the criteria object that this clause belongs to.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.CriteriaPhraseId">
	<summary>
 The ID of the criteria phrase object that this clause belongs to.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.Operator">
	<summary>
 The operator that this clause uses
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.ValueList">
	<summary>
 Returns a collection of values if the operator is In or NotIn.  Otherwise it returns an empty collection
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.LowValue">
	<summary>
 Returns the value if the operator is something other than between, In, or NotIn.  If it is between or notBetween, it is the low value for the range.
 An empty string is returned for In or NotIn.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.HighValue">
	<summary>
 Returns the high value if the operator is between.  Otherwise, an empty string is returned.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.DisplayValue">
	<summary>
 Creates the string value that is displayed in the criteria editor
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.StudyTable">
	<summary>
 Identifies the database table that the column belongs to
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.StudyTableColumn">
	<summary>
 Identifies the database column that this clause uses.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.AliasedColumnName">
	<summary>
 Displays the column name with an alias for the table it belongs to
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.CriteriaClause.BigViewColumnName">
	<summary>
 Displays that column name as it appears in the bigView
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.CriteriaClause.GetByCriteriaStatementIdAndPhraseId(System.Int32,System.Int32)">
	<summary>
 Creates all criteria clauses that exist for the specified phrase and statement
 </summary>
	<param name="criteriaStatementId"></param>
	<param name="criteriaPhraseId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.CriteriaClause.OperatorName">
	<summary>
 Gets the string representation of the operator
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.CriteriaClause.Clone">
	<summary>
 Creates a deep clone of the object
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.ConcurrencyLockCategory">
	<summary>
 Represents a category of entities that can be locked with the <see cref="T:Nrc.QualiSys.Library.ConcurrencyManager">ConcurrencyManager</see>.
 </summary>
</member><member name="T:Nrc.QualiSys.Library.IMedicareRecalcHistory">
	<summary>Interface to encapsulate key and allow DAL to do key assignment.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.MedicareReCalcLogId">
	<summary>PK for object.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.MedicareNumber">
	<summary>FK to Medicare Lookup for object.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.MedicareName">
	<summary>Name of the Medicare lookup.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.MedicarePropCalcTypeID">
	<summary>Type of calculation to use (estimated or calculated from historic)</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.MedicarePropDataTypeID">
	<summary>The actual type of calculation used (estimated or calculated from historic).</summary>
	<value></value>
	<CreatedBy>Keith Charron</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.EstRespRate">
	<summary>Estimate of respose rate used in calculation.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.EstIneligibleRate">
	<summary>Estimate of Ineligible rate used in calculation.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.EstAnnualVolume">
	<summary>Estaimate of annual volume used in calcuation.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.SwitchToCalcDate">
	<summary>Date at which to switch from using estimates to using historic rates.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.AnnualReturnTarget">
	<summary>Historic annual return target.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.ProportionCalcPct">
	<summary>The proportion that was calculated.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.SamplingLocked">
	<summary>If threshold percentage is exceeded between calculations, then sampling locks.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.ProportionChangeThreshold">
	<summary>Percent of change between calculations that will lock sampling.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.MemberId">
	<summary>ID of the signed in user.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.DateCalculated">
	<summary>Date the calculation was performed.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.HistoricRespRate">
	<summary>Historic response rate.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.HistoricAnnualVolume">
	<summary>Historic annual volume.</summary>
	<value></value>
	<CreatedBy>Keith Charron</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.ForcedCalculation">
	<summary>Flags whether calculation was time based or user based.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareRecalcHistory.PropSampleCalcDate">
	<summary>This is the date for the quarter the calcuation is being done in.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareRecalcHistory.NewMedicareRecalcHistory">
	<summary>Create a new object.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareRecalcHistory.Get(System.Int32)">
	<summary>Get object by its data store id.</summary>
	<param name="medicareReCalcLogId"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareRecalcHistory.GetAll">
	<summary>Get all recalc history object from data store.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareRecalcHistory.GetLatestByMedicareNumber(System.String,System.DateTime)">
	<summary>Get the lastest record by medicare number.</summary>
	<param name="medicareNumber"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareRecalcHistory.GetLatestBySampleDate(System.String,System.DateTime)">
	<summary>Get the lastest record by medicare number and sample date.</summary>
	<param name="medicareNumber"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareRecalcHistory.Insert">
	<summary>Dal insert.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareRecalcHistory.Update">
	<summary>Dal Update</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareRecalcHistory.DeleteImmediate">
	<summary>Dal Delete</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="T:Nrc.QualiSys.Library.MedicareRecalcHistory">
	<summary>This class represents a historical record of when a medicare numbers proportion was recalculated.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.Mailing.SentMailId">
 -----------------------------------------------------------------------------
 <summary>
 The QualiSys SendMail_id for this mailing.
 </summary>
	<value></value>
	<remarks>
 This value will be zero if the a SentMailing record does not exist.
 </remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
</member><member name="P:Nrc.QualiSys.Library.Mailing.LithoCode">
 -----------------------------------------------------------------------------
 <summary>
 The QualiSys Litho code for the mailing.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.StudyId">
 -----------------------------------------------------------------------------
 <summary>
 The study ID that this mailing was for
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.SurveyId">
 -----------------------------------------------------------------------------
 <summary>
 The survey ID that this mailing was for
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.PopId">
 -----------------------------------------------------------------------------
 <summary>
 The pop_id of the individual for whom this mailing is intended.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.MethodologyStepId">
	<summary>The Methodology Step ID from QualiSys</summary>
</member><member name="P:Nrc.QualiSys.Library.Mailing.MethodologyStepName">
	<summary>The name of the methodology step</summary>
</member><member name="P:Nrc.QualiSys.Library.Mailing.LanguageId">
 -----------------------------------------------------------------------------
 <summary>
 The Language Id for this mailing
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/5/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.ScheduledGenerationDate">
 -----------------------------------------------------------------------------
 <summary>
 The date that the mailing is scheduled to be generated.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.GenerationDate">
 -----------------------------------------------------------------------------
 <summary>
 The date that the mailing was generated.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.PrintDate">
 -----------------------------------------------------------------------------
 <summary>
 The date that the mailing was printed
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.MailDate">
 -----------------------------------------------------------------------------
 <summary>
 The date that the mailing was mailed.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.NonDeliveryDate">
 -----------------------------------------------------------------------------
 <summary>
 The date that this mailing was marked non-deliverable.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.ReturnDate">
 -----------------------------------------------------------------------------
 <summary>
 The date that this mailing was returned.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.ExpirationDate">
 -----------------------------------------------------------------------------
 <summary>
 The date that this mailing was expired.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[AMnatsakanyan]	4/1/2009	Created
 </history>
 -----------------------------------------------------------------------------    

</member><member name="P:Nrc.QualiSys.Library.Mailing.IsGenerated">
 -----------------------------------------------------------------------------
 <summary>
 Returns True if this mailing has been generated.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.IsPrinted">
 -----------------------------------------------------------------------------
 <summary>
 Returns True if this mailing has been printed.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.IsMailed">
 -----------------------------------------------------------------------------
 <summary>
 Returns True if this mailing has been mailed.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.IsExpired">
 -----------------------------------------------------------------------------
 <summary>
 Returns True if this mailing has been expired.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[amnatsakanyan]	4/1/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.IsNonDeliverable">
 -----------------------------------------------------------------------------
 <summary>
 Returns True if this mailing has been marked as non-deliverable
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.IsReturned">
 -----------------------------------------------------------------------------
 <summary>
 Returns True if this mailing has been returned.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:Nrc.QualiSys.Library.Mailing.Study">
 -----------------------------------------------------------------------------
 <summary>
 The Study to which this mailing belongs.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Default constructor.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.GetMailingByLitho(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Retrives a Mailing object from the data store by the litho code
 </summary>
	<param name="litho">The QualiSys litho code of the mailing</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.GetMailingByBarcode(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Retrives a Mailing object from the data store by the barcode
 </summary>
	<param name="barcode">The barcode of the mailing</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.GetMailingByWac(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Retrives a Mailing object from the data store by the web access code
 </summary>
	<param name="wac">The Web Access Code for the mailing</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.GetMailingsByPopId(System.Int32,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
	</summary>
	<param name="popId"></param>
	<param name="studyId"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/4/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.CancelFutureMailings(System.Int32,System.Int32,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Sets the disposition for this mailing and also cancels any scheduled mailings.
 </summary>
	<param name="dispositionId">The disposition ID to store for the mailing.</param>
	<param name="receiptTypeId"></param>
	<param name="userName">The name of the user to initiate this action.</param>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.ChangeRespondentAddress(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Sets the disposition for this mailing and changes the respondent's address.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.ChangeRespondentAddress(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Sets the disposition for this mailing and changes the respondent's address.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.RegenerateMailing(System.Int32,System.Int32,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Sets the disposition for this mailing and schedules a re-generation.
 </summary>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.RegenerateMailing(System.Int32,System.Int32,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Sets the disposition for this mailing and schedules a re-generation in a different language
 </summary>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.TakeOffCallList(System.Int32,System.Int32,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Sets the disposition for this mailing and then adds the respondant to the Study's Take Off Call List
 </summary>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.LogContactRequest(System.Int32,System.Int32,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Sets the disposition for this mailing and then logs that the respondent wished to be contacted.
 </summary>
	<param name="dispositionId"></param>
	<param name="receiptTypeId"></param>
	<param name="userName"></param>
	<param name="emailText"></param>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:Nrc.QualiSys.Library.Mailing.GetAvailableLanguages">
 -----------------------------------------------------------------------------
 <summary>
 Returns a collection of languages that are available for this mailing.
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[jcamp]	10/12/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:Nrc.QualiSys.Library.Mailing">
	<summary>
 Represents a QualiSys Mailing.  
 </summary>
</member><member name="M:Nrc.QualiSys.Library.CoverLetterMapping.UpdateObj">
	<summary>
 This method will traverse the Mapping Grid and take appropriate action on each unit.  The action 
 will be an insert, update, delete, or nothing.
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.CoverLetterMapping.GetChanges">
	<summary>
 Gets a list of all changes that have been made to the object since it was loaded or created.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.CoverLetterMapping.Equals(Nrc.QualiSys.Library.CoverLetterMapping)">
	<summary>
 Compares each element of the cover letter for matches.  Returns true if all elements are the same
 </summary>
	<param name="mapping"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.CoverLetterMapping.HasMatchingCoverLetterItems(Nrc.QualiSys.Library.CoverLetterMapping)">
	<summary>
 Checks whether this cover letter has a match 
 </summary>
	<param name="mapping"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.Methodology.Id">
	<summary>The unique identifier of the methodology</summary>
</member><member name="P:Nrc.QualiSys.Library.Methodology.SurveyId">
	<summary>The unique identifier of the survey to which the methodology belongs</summary>
</member><member name="P:Nrc.QualiSys.Library.Methodology.Name">
	<summary>The name given to the methodology by the end user</summary>
</member><member name="P:Nrc.QualiSys.Library.Methodology.StandardMethodologyId">
	<summary>The unique identifier of the StandardMethodology used to create this one</summary>
</member><member name="P:Nrc.QualiSys.Library.Methodology.IsActive">
	<summary>Indicates that the methodology is the currently active 
 methodology for the survey.</summary>
</member><member name="P:Nrc.QualiSys.Library.Methodology.AllowEdit">
	<summary>Returns True if the methodology can be edited</summary>
	<remarks>A methodology can only be edited before it has been used to field surveys</remarks>
</member><member name="P:Nrc.QualiSys.Library.Methodology.AllowDelete">
	<summary>Returns True if the methodology can be deleted</summary>
	<remarks>The same rules apply to determine if a methodolgy can be edited</remarks>
</member><member name="P:Nrc.QualiSys.Library.Methodology.DateCreated">
	<summary>The timestamp of when the methodology was created</summary>
</member><member name="P:Nrc.QualiSys.Library.Methodology.IsCustomizable">
	<summary>Returns True if the methodology can be customized.</summary>
	<remarks>To ensure standards compliance some methodologies cannot be customized</remarks>
</member><member name="P:Nrc.QualiSys.Library.Methodology.MethodologySteps">
	<summary>The collection of MethodologyStep objects that make up this methodology</summary>
</member><member name="P:Nrc.QualiSys.Library.Methodology.StandardMethodology">
	<summary>
 Returns a reference to the Standard Methodology object that was used to create this Methodology
 </summary>
	<value></value>
	<returns></returns>
	<remarks>This property is lazy populated</remarks>
</member><member name="P:Nrc.QualiSys.Library.Methodology.IsDirty">
	<summary>Returns True if the object has been changed since retrieved from the data store</summary>
</member><member name="P:Nrc.QualiSys.Library.Methodology.IsNew">
	<summary>Returns True if the object has not yet been persisted to the data store.</summary>
</member><member name="P:Nrc.QualiSys.Library.Methodology.Survey">
	<summary>
 The Survey object associated with this methodology
 </summary>
</member><member name="M:Nrc.QualiSys.Library.Methodology.Get(System.Int32)">
	<summary>
 Returns a specific Methodology object from the data store
 </summary>
	<param name="methodologyId">The unique identifier of the Methodology to retrieve</param>
</member><member name="M:Nrc.QualiSys.Library.Methodology.GetBySurveyId(System.Int32)">
	<summary>
 Retrieves all the methodologies for the survey specified
 </summary>
	<param name="surveyId">The unique identifier of the survey</param>
	<returns>Returns a collection of Methodology objects</returns>
</member><member name="M:Nrc.QualiSys.Library.Methodology.CreateFromStandard(System.Int32,System.String,Nrc.QualiSys.Library.StandardMethodology)">
	<summary>
 Creates a new unpersisted Methodology instance based on the specified StandardMethodology
 </summary>
	<param name="surveyId">The unique identifier of the survey that this Methodology will belong to</param>
	<param name="name">The name of the methodology</param>
	<param name="standardMeth">The Standard Methodology that this Methodology conforms to</param>
	<returns>Returns a new unsaved Methodology object</returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Methodology.Update">
	<summary>
 Saves the Methodology to the data store.
 </summary>
	<remarks>If the Methodology is "New" it will insert a new Methodology.  If 
 the Methodology has already been inserted it will just be updated</remarks>
</member><member name="M:Nrc.QualiSys.Library.Methodology.Delete(System.Int32)">
	<summary>
 Deletes a Methodology from the data store
 </summary>
	<param name="methodologyId">The unique identifier of the Methodology to delete</param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Methodology.AddNewMethodologyStep(Nrc.QualiSys.Library.MethodologyStepType)">
	<summary>
 Adds a new MethodologyStep to this Methodology based on the MethodologyStepType specified
 </summary>
	<param name="stepType">The MethodologyStepType to use as a template for the new step</param>
	<returns>Returns a reference to the newly created MethodologyStep</returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Methodology.ResetDirtyFlag">
	<summary>
 Marks the object not dirty
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Methodology.Refresh">
	<summary>
 Repopulates the object from the data store.  A new collection of MethodologyStep objects will be created.
 </summary>
	<remarks>The user should understand that existing references to the MethodologySteps will need to be updated</remarks>
</member><member name="M:Nrc.QualiSys.Library.Methodology.RefreshSteps">
	<summary>
 Repopulates the methodology steps from the data store.  A new collection of MethodologyStep objects will be created.
 </summary>
	<remarks>The user should understand that existing references to the MethodologySteps will need to be updated</remarks>
</member><member name="M:Nrc.QualiSys.Library.Methodology.ResetMethodologyTypeToCustom(Nrc.QualiSys.Library.SurveyTypes,Nrc.QualiSys.Library.SubTypeList)">
	<summary>
 Resets the methodology type to the first customizable type for the specified survey type without changing the currently configured steps.
 </summary>
	<remarks>The user should understand that existing references to the MethodologySteps will remain unchanged</remarks>
</member><member name="M:Nrc.QualiSys.Library.Methodology.SaveActiveState">
	<summary>
 Sets this Methodology as the currently active Methodology for the survey.  All other methodologies are set to inactive.
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Methodology.PropertyChanged">
	<summary>
 Is fired when a property changes
 </summary>
</member><member name="M:Nrc.QualiSys.Library.Methodology.IdentifyFirstSurvey">
	<summary>
 Sets the sequence number to be the order in which the steps appear in 
 the collection and also sets which is the first survey
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.Methodology.Validate">
	<summary>
 Throws an exception if the object is found to be in a unsafe state
 </summary>
</member><member name="T:Nrc.QualiSys.Library.Methodology">
	<summary>
 Represents a Qualisys Methodology for collection survey data
 </summary>
	<remarks>A methodology is comprised of one or more MethodologyStep objects.
 MethodologyStep objects are created/updated atomically with the Methodology
 </remarks>
</member><member name="T:Nrc.QualiSys.Library.MedicareRecalcHistoryCollection">
	<summary>Collection container for MedicareRecalcHistory objects.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="T:Nrc.QualiSys.Library.CAHPSType">
	<summary>
 Enumerates the Qualisys supported CAHPS types
 </summary>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.IMedicareGlobalCalcDate">
	<summary>Allows for DAL to assign Key field of object.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalcDate.MedicareGlobalCalcDateId">
	<summary>Key Field</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalcDate.MedicareGlobalRecalDefaultId">
	<summary>FK field</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MedicareGlobalCalcDate.ReCalcMonth">
	<summary>Date used to determine when to recalculate proportional sampling.</summary>
	<value></value>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalcDate.NewMedicareGlobalCalcDate">
	<summary>Create a new, empty object.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalcDate.NewMedicareGlobalCalcDate(System.Int32,System.Int32)">
	<summary>Create a new object with preset values.</summary>
	<param name="medicareGlobalCalcDefaultID"></param>
	<param name="month"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalcDate.Get(System.Int32)">
	<summary>Retrieve the object by its PK</summary>
	<param name="MedicareGlobalCalcDateId"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalcDate.GetAll">
	<summary>Retrieve all object from the data store.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalcDate.GetByMedicareGlobalCalcDefaultID(System.Int32)">
	<summary>Retrieve collection by their FK reference.</summary>
	<param name="medicareGlobalCalcDefaultID"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalcDate.DeleteCalcDatesByGlobalDefaultID(System.Int32)">
	<summary>Remove all calc dates by FK reference</summary>
	<param name="medicareGlobalCalcDefaultID"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalcDate.Insert">
	<summary>Call DAL Insert.  Notice we have to mark old here when save called from parent object.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalcDate.Update">
	<summary>Dal Update call.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.MedicareGlobalCalcDate.DeleteImmediate">
	<summary>Dal Delete call.</summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="T:Nrc.QualiSys.Library.MedicareGlobalCalcDate">
	<summary>Represents the MedicareGlobalRecalcDates table which holds the collection of dates used to determine when to recalculate for proportional sampling. </summary>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStep.Id">
	<summary>
 The QualiSys MailStepId for this mailing step.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStep.Name">
	<summary>
 The name of this step
 </summary>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStep.MethodologyId">
	<summary>
 The MethodologyID of this step.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStep.SurveyId">
	<summary>
 The SurveyID of this mailing step.
 </summary>
</member><member name="P:Nrc.QualiSys.Library.MethodologyStep.OrgVendorID">
	<summary>
 Stores the original database value of the VendorID
 </summary>
</member><member name="M:Nrc.QualiSys.Library.MethodologyStep.#ctor">
	<summary>
 The default constructor.
 </summary>
</member><member name="M:Nrc.QualiSys.Library.MethodologyStep.GetByMethodologyId(System.Int32)">
	<summary>
 Returns a collection of MethodologySteps objects that belong to the specified Methodology
 </summary>
	<param name="methodologyId">The unique identifier of the Methodology</param>
</member><member name="M:Nrc.QualiSys.Library.MethodologyStep.CopyStepTypeProperties(Nrc.QualiSys.Library.MethodologyStepType)">
	<summary>
 Copies properties from a MethodologyStepType object to the MethodologyStep
 </summary>
</member><member name="M:Nrc.QualiSys.Library.MethodologyStep.CanDecreaseSequence">
	<summary>
 Returns True if the step can be moved up in sequence
 </summary>
</member><member name="M:Nrc.QualiSys.Library.MethodologyStep.CanIncreaseSequence">
	<summary>
 Returns True if the step can be moved down in sequence
 </summary>
</member><member name="M:Nrc.QualiSys.Library.MethodologyStep.IncreaseSequence">
	<summary>
 Moves the step down one sequence number in the methodology
 </summary>
</member><member name="M:Nrc.QualiSys.Library.MethodologyStep.DecreaseSequence">
	<summary>
 Moves the step up one sequence in the methodology
 </summary>
</member><member name="M:Nrc.QualiSys.Library.MethodologyStep.AddVendorValidation">
	<summary>
 Vendor validation rule is added on demand as it's not set during
 the initial step of the methodology, but it is required at a later point.
 </summary>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.MethodologyStep">
	<summary>
 Represents a step in the methodology for a survey.
 </summary>
</member><member name="T:Nrc.QualiSys.Library.SamplePeriod.TimeFrame">
	<summary>
 The time frames that a period can belong to
 </summary>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.HasRemainingSamplesCanceled">
	<summary>
 Indicates whether the samples that have not been run have been marked as canceled
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.IsCancelable">
	<summary>
 Determines if the period can have all remaining samples canceled
 </summary>
	<value></value>
	<returns></returns>
	<remarks> You can't complete a sample period if you haven't started sampling it, it has already been canceled or
 all samples have already been pulled</remarks>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.IsUnCancelable">
	<summary>
 Determines if the period can have all remaining samples uncanceled
 </summary>
	<value></value>
	<returns></returns>
	<remarks> You can't uncomplete a sampleperiod if you have started sampling another period.  This 
 would create a scenario where more than one active period would exist</remarks>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.Id">
	<summary>
 The unique identifier for the SamplePeriod
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.SurveyId">
	<summary>
 The ID of the Survey to which the SamplePeriod belongs
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.CreationDate">
	<summary>
 The date on which this SamplePeriod was created
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.Name">
	<summary>
 The name of the sample period
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.SamplingScheduleCharacter">
	<summary>
 Returns the 1 letter abbreviation for the sampling schedule type (Daily, Weekly, etc.).  This is what is stored 
 in the database.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.ExpectedSamples">
	<summary>
 The number of samples that are expected in this period
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.ExpectedStartDate">
	<summary>
 The expected start date of the period
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.ExpectedEndDate">
	<summary>
 The expected end date of the period
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.IsActive">
	<summary>
 Returns True if this SamplePeriod is the currently active SamplePeriod
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.SamplingMethod">
	<summary>
 The SamplingMethod used to determine how many encounters are needed
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.SampleSets">
	<summary>
 The collection of SampleSets that have been created for this SamplePeriod
 </summary>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.PeriodTimeFrame">
	<summary>
 Returns the time frame for the period
 </summary>
	<value></value>
	<returns></returns>
	<remarks>The time frame is either past, active, or future.  This value helps us determine which periods can be selected 
 during sampling.</remarks>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.SamplePeriodScheduledSamples">
	<summary>
 Returns a collection containing all of the scheduled samples
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.NumberOfDaysPriorToSampleDataFileExpectedToArrive">
	<summary>
 How many days before a sample is pulled do we expect to receive a file from the client
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.ExpectedFirstSampleDate">
	<summary>
 This is the date of the first expected sample
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SamplePeriod.HasSamplesPulled">
	<summary>
 Indicates whether any samples have been pulled for this sampleperiod
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.NewSamplePeriod">
	<summary>
 Returns a new period
 </summary>
	<returns></returns>
	<remarks>This overload should only be called when populating an object from the database.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.NewSamplePeriod(Nrc.QualiSys.Library.Survey,System.Int32)">
	<summary>
 Returns a new period
 </summary>
	<returns></returns>
	<remarks>This overload should be called when creating a new object in the UI.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.CreateSampleSet(System.Collections.ObjectModel.Collection{Nrc.QualiSys.Library.StudyDataset},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Nrc.QualiSys.Library.Employee,System.Boolean,System.Int32)">
	<summary>
 Creates a new SampleSet for this SamplePeriod and performs the sample
 </summary>
	<param name="datasets">The collection of StudyDataset objects to use in the sample</param>
	<param name="startDate">The starting date to use in the sample</param>
	<param name="endDate">The ending date to use in the sample</param>
	<param name="creator">The Employee object of the user creating the sample</param>
	<param name="specificSampleSeedStaticPlus">Pass in a greater or equal than zero sample seed to be used by StaticPlus</param>
	<returns>Returns the newly created SampleSet object</returns>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.GetBySurveyId(System.Int32)">
	<summary>
 Gets all Periods for the specified survey
 </summary>
	<param name="surveyId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.Get(System.Int32)">
	<summary>
 Gets a specific Period
 </summary>
	<param name="samplePeriodId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.CancelRemainingSamplesInPeriod">
	<summary>
 This method will fill in dummy actual sample dates for all scheduled samples that 
 have not been run.
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.UnCancelRemainingSamplesInPeriod">
	<summary>
 This method will remove dummy ActualSampleDates for scheduled samples that 
 are marked as completed.  It will only be allowed if this is the active period, a new period, or no samples
 have been pulled. If it's not the active period and has some samples pulled, 
 then uncompleting it would create 2 active periods.
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.ReValidate">
	<summary>
 This method will force a check of the validation rules.
 </summary>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.FinishedUpdating">
	<summary>
 Called after updating the database.  This will mark the object as clean.
 </summary>
	<remarks>This is only needed when not using the save method of the class.  The save method will
 automatically mark as clean.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.FinishedInserting">
	<summary>
 Called after inserting a new item in the database.  This will mark the object as old.
 </summary>
	<remarks>This is only needed when not using the save method of the class.  The save method will
 automatically mark as old.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SamplePeriod.Save">
	<summary>
 Any time we make changes we want to reevaluate the time period information
 </summary>
	<remarks></remarks>
</member><member name="T:Nrc.QualiSys.Library.SamplePeriod">
	<summary>
 Represents a Period in which various SampleSets are created
 </summary>
</member><member name="P:Nrc.QualiSys.Library.Survey.SurveySubTypeOverrideName">
	<summary>
 Introduces the ability to override survey type with survey sub type for rule look-ups
 </summary>
	<value></value>
	<returns>the name of any overriding sub type if selected</returns>
	<remarks>will retrieve PCMH for example CJB 8/14/2014</remarks>
</member><member name="M:Nrc.QualiSys.Library.Survey.RefreshSamplePeriodsAfterSampling">
	<summary>
 This method is used the refresh the IsActive flag and the collection of samples for each period
 in a survey.
 </summary>
	<remarks>This method should only be used after a sample is completed.  It does not do a complete
 refresh of each period object.</remarks>
</member><member name="M:Nrc.QualiSys.Library.Survey.Refresh">
	<summary>
 Refreshes the survey by retrieving the current instance from the database.
 </summary>
	<remarks>This method is used to get updated values when the survey is updated outside of
 the current application.</remarks>
</member>
</members>
</doc>