<?xml version="1.0"?>
<doc>
<assembly>
<name>
Nrc.QualiSys.Library.SqlDataProvider
</name>
</assembly>
<members>
<member name="M:Nrc.QualiSys.Library.SqlDataProvider.BusinessRuleProvider.PopulateBusinessRule(Nrc.Framework.Data.SafeDataReader,Nrc.QualiSys.Library.Survey)">
	<summary>
 Populates a business rule object usings a datareader
 </summary>
	<param name="rdr"></param>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.BusinessRuleProvider.SelectBusinessRule(System.Int32,Nrc.QualiSys.Library.Survey)">
	<summary>
 Creates an instance of an existing business rule
 </summary>
	<param name="businessRuleId"></param>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.BusinessRuleProvider.SelectBusinessRulesBySurvey(Nrc.QualiSys.Library.Survey)">
	<summary>
 Creates a collection of business rule objects
 </summary>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.BusinessRuleProvider.InsertBusinessRule(Nrc.QualiSys.Library.BusinessRule,System.Data.Common.DbTransaction)">
	<summary>
 Inserts a new business rule
 </summary>
	<param name="busRule"></param>
	<param name="tran"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.BusinessRuleProvider.DeleteBusinessRule(Nrc.QualiSys.Library.BusinessRule,System.Data.Common.DbTransaction)">
	<summary>
 Deletes a business rule
 </summary>
	<param name="businessRuleObject"></param>
	<param name="tran"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.BusinessRuleProvider.UpdateBusinessRule(Nrc.QualiSys.Library.BusinessRule,System.Data.Common.DbTransaction)">
	<summary>
 Updates a business rule
 </summary>
	<param name="businessRuleObject"></param>
	<param name="tran"></param>
	<remarks></remarks>
</member><member name="P:Nrc.QualiSys.Library.SqlDataProvider.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Nrc.QualiSys.Library.SqlDataProvider.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Nrc.QualiSys.Library.SqlDataProvider.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.PopulateSampleSet(Nrc.Framework.Data.SafeDataReader)">
	<summary>
 Creates an instance of a sampleset from a datareader
 </summary>
	<param name="rdr"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.Select(System.Int32)">
	<summary>
 Creates an instance of an existing sampleset
 </summary>
	<param name="sampleSetId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.SelectByPeriodId(System.Int32)">
	<summary>
 Returns a collection of all samplesets in a period
 </summary>
	<param name="periodId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.SelectBySurveyId(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean)">
	<summary>
 Returns a collection of all samplesets in a survey created during the specified date range.
 </summary>
	<param name="surveyId"></param>
	<param name="creationFilterStartDate"></param>
	<param name="creationFilterEndDate"></param>
	<param name="showOnlyUnscheduled"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.Insert(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.String,System.Int32,System.Int32,Nrc.QualiSys.Library.SamplingAlgorithm,System.Int32,System.Int32,System.Boolean)">
	<summary>
 Inserts a new sampleset
 </summary>
	<param name="surveyId"></param>
	<param name="employeeId"></param>
	<param name="sampleEncounterStartDate"></param>
	<param name="sampleEncounterEndDate"></param>
	<param name="isOverSample"></param>
	<param name="isFirstSampleInPeriod"></param>
	<param name="periodId"></param>
	<param name="surveyName"></param>
	<param name="sampleEncounterDateTableId"></param>
	<param name="sampleEncounterDateFieldId"></param>
	<param name="Algorithm"></param>
	<param name="samplePlanId"></param>
	<param name="surveyTypeId"></param>
	<param name="HCAHPSOverSample"></param>
	<returns></returns>
	<remarks>This method is currently used with static plus only.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.InsertSamplePop(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Inserts a samplepop record
 </summary>
	<param name="sampleSetId"></param>
	<param name="studyId"></param>
	<param name="popId"></param>
	<param name="badAddress"></param>
	<param name="badPhone"></param>
	<remarks>This method is currently used with static plus only.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.InsertSelectedSample(System.Int32,System.Int32,System.Int32,System.Int32,Nrc.QualiSys.Library.SampleSet.UnitSelectType,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Inserts a selected sampled record
 </summary>
	<param name="SampleSetId"></param>
	<param name="StudyId"></param>
	<param name="PopId"></param>
	<param name="SampleUnitId"></param>
	<param name="SelectionType"></param>
	<param name="EncId"></param>
	<param name="sampleEncounterDate"></param>
	<param name="reportDate"></param>
	<remarks>This method is currently used with static plus only.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.InsertSampleDataSet(System.Int32,System.Int32)">
	<summary>
 Inserts a record into sampleDataSet
 </summary>
	<param name="sampleSetId"></param>
	<param name="dataSetId"></param>
	<remarks>This method is currently used with static plus only.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.InsertSampleSetInPeriod(System.Int32,System.Int32)">
	<summary>
 Updates the samplesetId column in the perioddates table
 </summary>
	<param name="sampleSetId"></param>
	<param name="periodId"></param>
	<remarks>This method is currently used with static plus only.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.InsertDQRuleIntoSPWDQCounts(System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Inserts a DQ rule and count in the SPWDQcounts table.
 </summary>
	<param name="sampleSetId"></param>
	<param name="sampleUnitId"></param>
	<param name="dqRuleId"></param>
	<param name="count"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.InsertRemovedRulesIntoSPWDQCOUNTS(System.Int32,System.Int32,Nrc.QualiSys.Library.SampleSet.RemovedRule,System.Int32)">
	<summary>
 Inserts a removed rule and count in the SPWDQcounts table.
 </summary>
	<param name="sampleSetId"></param>
	<param name="sampleUnitId"></param>
	<param name="rule"></param>
	<param name="count"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.ScheduleSampleSetGeneration(System.Int32,System.DateTime)">
	<summary>
 Schedules a sampleset to be generated.
 </summary>
	<param name="sampleSetId"></param>
	<param name="generationDate"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.UnscheduleSampleSetGeneration(System.Int32)">
	<summary>
 Unschedules a scheduled sample set.
 </summary>
	<param name="sampleSetId"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.Delete(System.Int32)">
	<summary>
 Deletes a sampleset
 </summary>
	<param name="sampleSetId"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.SelectEncounterUnitEligibility(System.Int32,System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32,Nrc.QualiSys.Library.SampleSet.SamplingMethod,Nrc.QualiSys.Library.ResurveyMethod,Nrc.QualiSys.Library.SamplingAlgorithm)">
	<summary>
 Returns a recordset with all individuals eligible to be sampled.
 </summary>
	<param name="surveyId"></param>
	<param name="studyId"></param>
	<param name="datasetIds"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<param name="randomSeed"></param>
	<param name="reSurveyPeriod"></param>
	<param name="sampleEncounterDateField"></param>
	<param name="reportDateField"></param>
	<param name="encounterTableExists"></param>
	<param name="sampleSetId"></param>
	<param name="samplingMethod"></param>
	<param name="resurveyMethodology"></param>
	<param name="samplingAlgorithmId"></param>
	<returns></returns>
	<remarks>This method is currently used with static plus only.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.SelectOutGoNeeded(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Nrc.QualiSys.Library.SampleSet.SamplingMethod,System.Int32,System.Boolean)">
	<summary>
 Returns a dictionary of units and the outgo needed for each unit.
 </summary>
	<param name="sampleSetID"></param>
	<param name="surveyId"></param>
	<param name="periodId"></param>
	<param name="samplesInPeriod"></param>
	<param name="samplesRun"></param>
	<param name="sampleMethod"></param>
	<param name="responseRateRecalculationPeriod"></param>
	<returns></returns>
	<remarks>This method is currently used with static plus only.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.UpdateSamplePlanWorksheet(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32)">
	<summary>
 Updates the Sampleplanworksheet table after sampling is completed.
 </summary>
	<param name="sampleSetId"></param>
	<param name="sampleUnitId"></param>
	<param name="DQCount"></param>
	<param name="directSampleCount"></param>
	<param name="indirectSampleCount"></param>
	<param name="universeCount"></param>
	<param name="minEncounterDate"></param>
	<param name="maxEncounterDate"></param>
	<param name="badAddressCount"></param>
	<param name="badPhoneCount"></param>
	<param name="hcahpsDirectlySampledCount"></param>
	<remarks>This method is currently used with static plus only.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.UpdateSampleSetPostSample(System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Updates that sampleset table after sampling is completed.
 </summary>
	<param name="sampleSetId"></param>
	<param name="preSampleTime"></param>
	<param name="PostSampleTime"></param>
	<param name="seed"></param>
	<param name="minEncounterDate"></param>
	<param name="maxEncounterDate"></param>
	<remarks>This method is currently used with static plus only.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.SelectHCAHPSEligibleEncountersBySampleSetID(System.Int32,System.Int32)">
	<summary>
 Gets the count of encounters eligible for HCAHPS sampling
 </summary>
	<param name="sampleSetId"></param>
	<param name="sampleUnitId"></param>
	<returns>Count of encounters eligible for HCAHPS sampling</returns>
	<remarks>This method is currently used with static plus only.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleSetProvider.UpdateSampleSetUnitTarget(System.Int32,System.Int32,System.Int32,System.Boolean)">
	<summary>
 Updates the SampleSetUnitTarget table with the calculated target based on HCAHPS proportional sampling
 </summary>
	<param name="sampleSetId"></param>
	<param name="sampleUnitId"></param>
	<param name="target"></param>
	<remarks>This method is currently used with static plus only and is only called for HCAHPS units.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MethodologyProvider.PopulateMethodology(Nrc.Framework.Data.SafeDataReader)">
	<summary>
 Populates a Methodology object from a DataReader
 </summary>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MethodologyProvider.PopulateMethodologyStep(Nrc.Framework.Data.SafeDataReader,System.Collections.Generic.Dictionary{System.Int32,Nrc.QualiSys.Library.MethodologyStep})">
	<summary>
 Populates a MethodologyStep from a DataReader
 </summary>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MethodologyProvider.PopulateStandardMethodologyStep(Nrc.Framework.Data.SafeDataReader,System.Collections.Generic.Dictionary{System.Int32,Nrc.QualiSys.Library.MethodologyStep})">
	<summary>
 Populates a StandardMethodologyStep from a DataReader
 </summary>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MethodologyProvider.PopulateMethodologyStepType(Nrc.Framework.Data.SafeDataReader)">
	<summary>
 Populates a MethodologyStepType from a DataReader
 </summary>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MethodologyProvider.PopulateStandardMethodology(Nrc.Framework.Data.SafeDataReader)">
	<summary>
 Populates a StandardMethodology from a DataReader
 </summary>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalcDateProvider.PopulateMedicareGlobalCalcDate(Nrc.Framework.Data.SafeDataReader)">
	<summary>Populates the object with data from the store.</summary>
	<param name="rdr"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalcDateProvider.Get(System.Int32)">
	<summary>Retrieves by PK from the data store.</summary>
	<param name="MedicareGlobalCalcDateId"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalcDateProvider.GetAll">
	<summary>Retrieves all values from the data store.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalcDateProvider.GetByGlobalDefaultID(System.Int32)">
	<summary>Retrieves from the data store by FK</summary>
	<param name="medicareGlobalDefaultID"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalcDateProvider.DeleteCalcDatesByGlobalDefaultID(System.Int32)">
	<summary>Deletes from the data store by FK</summary>
	<param name="medicareGlobalCalcDefaultID"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalcDateProvider.Insert(Nrc.QualiSys.Library.MedicareGlobalCalcDate)">
	<summary>Inserts into the data store.</summary>
	<param name="instance"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalcDateProvider.Update(Nrc.QualiSys.Library.MedicareGlobalCalcDate)">
	<summary>Updates the data store.</summary>
	<param name="instance"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalcDateProvider.Delete(System.Int32)">
	<summary>Deletes from the data store.</summary>
	<param name="MedicareGlobalCalcDateId"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.Globals.ExecuteDecimal(System.Data.Common.DbCommand)">
	<summary>Need a scalar value that returns a decmial.</summary>
	<param name="cmd"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalculationDefaultProvider.PopulateMedicareGlobalCalculationDefault(Nrc.Framework.Data.SafeDataReader)">
	<summary>Populates the object with values from the data store.</summary>
	<param name="rdr"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalculationDefaultProvider.Get(System.Int32)">
	<summary>Retrieves from the data store by PK.</summary>
	<param name="MedicareGlobalCalculationDefaultId"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalculationDefaultProvider.GetAll">
	<summary>Retrieves all records from the data store.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalculationDefaultProvider.Insert(Nrc.QualiSys.Library.MedicareGlobalCalculationDefault)">
	<summary>Inserts into the data store.</summary>
	<param name="instance"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalculationDefaultProvider.Update(Nrc.QualiSys.Library.MedicareGlobalCalculationDefault)">
	<summary>Updates the data store.</summary>
	<param name="instance"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareGlobalCalculationDefaultProvider.Delete(System.Int32)">
	<summary>Deletes from the data store.</summary>
	<param name="MedicareGlobalCalculationDefaultId"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.ModeSectionMappingProvider.Select(System.Int32,System.Int32)">
	<summary>
 Returns an instance of an existing unit.
 </summary>
	<param name="Id"></param>
	<param name="Survey_Id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareRecalcHistoryProvider.PopulateMedicareRecalcHistory(Nrc.Framework.Data.SafeDataReader)">
	<summary>Poulates the MedicareRecalcHistory object from the data store.</summary>
	<param name="rdr"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareRecalcHistoryProvider.Get(System.Int32)">
	<summary>Proc call to get record by PK</summary>
	<param name="medicareRecalcHistoryID"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareRecalcHistoryProvider.GetAll">
	<summary>Proc call to get all records.</summary>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareRecalcHistoryProvider.GetLatestByMedicareNumber(System.String,System.DateTime)">
	<summary>Proc call to get lastest record by medicare number.</summary>
	<param name="medicareNumber"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareRecalcHistoryProvider.GetLatestBySampleDate(System.String,System.DateTime)">
	<summary>Proc call to get lastest record by medicare number and sample date.</summary>
	<param name="medicareNumber"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareRecalcHistoryProvider.Insert(Nrc.QualiSys.Library.MedicareRecalcHistory)">
	<summary>Proc call for insert.</summary>
	<param name="instance"></param>
	<returns></returns>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareRecalcHistoryProvider.Update(Nrc.QualiSys.Library.MedicareRecalcHistory)">
	<summary>Proc call for update.</summary>
	<param name="instance"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.MedicareRecalcHistoryProvider.Delete(System.Int32)">
	<summary>Proc call for delete.</summary>
	<param name="medicareRecalcHistoryID"></param>
	<CreatedBy>Tony Piccoli</CreatedBy>
	<RevisionList><list type="table"><listheader><term>Date Modified - Modified By</term><description>Description</description></listheader><item><term></term><description></description></item><item><term></term><description></description></item></list></RevisionList>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.PopulateSampleUnit(Nrc.Framework.Data.SafeDataReader,Nrc.QualiSys.Library.Survey)">
	<summary>
 Returns an instance of a sampleUnit from a datareader.
 </summary>
	<param name="rdr"></param>
	<param name="survey"></param>
	<returns></returns>
	<remarks>This overload does not provide a parentUnit or childUnits collection</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.PopulateSampleUnit(Nrc.Framework.Data.SafeDataReader,Nrc.QualiSys.Library.Survey,Nrc.QualiSys.Library.SampleUnit,System.Collections.ObjectModel.Collection{Nrc.QualiSys.Library.SampleUnit})">
	<summary>
 Returns an instance of a sampleUnit from a datareader.
 </summary>
	<param name="rdr"></param>
	<param name="survey"></param>
	<param name="parentUnit"></param>
	<param name="childUnits"></param>
	<returns></returns>
	<remarks>This overload requires a parentUnit and childUnits collection</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.Select(System.Int32,Nrc.QualiSys.Library.Survey)">
	<summary>
 Returns an instance of an existing unit.
 </summary>
	<param name="sampleUnitId"></param>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.SelectByParentId(System.Int32,Nrc.QualiSys.Library.Survey)">
	<summary>
 Returns a collection of child units for the specified parent
 </summary>
	<param name="parentSampleUnitId"></param>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.SelectBySurvey(Nrc.QualiSys.Library.Survey)">
	<summary>
 Returns a collection of all units for a survey.
 </summary>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.SelectAllForSurvey(Nrc.QualiSys.Library.Survey)">
	<summary>
 Returns all sample units for a survey without parent/child relationship
 </summary>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.FillSampleUnit(System.Data.DataRow,Nrc.QualiSys.Library.SampleUnit,Nrc.QualiSys.Library.Survey)">
	<summary>
 This method is used to recursively populate a tree of sampleunits
 </summary>
	<param name="parentRow"></param>
	<param name="parentUnit"></param>
	<param name="survey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.InsertSamplePlan(System.Int32,System.Int32,System.Data.Common.DbTransaction)">
	<summary>
 This method adds a new record in the sampleplan table
 </summary>
	<param name="surveyId"></param>
	<param name="qualisysEmployeeId"></param>
	<param name="tran"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.UpdateSamplePlanId(Nrc.QualiSys.Library.SampleUnit,System.Int32)">
	<summary>
 This Method recursively sets the sampleplan ID on existing units.
 </summary>
	<param name="unit"></param>
	<param name="sampleplanId"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.Update(Nrc.QualiSys.Library.SampleUnit,System.Int32)">
	<summary>
 This method is used to update a sampleUnit
 </summary>
	<param name="rootUnit"></param>
	<param name="qualisysEmployeeId"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.IterateUnits(Nrc.QualiSys.Library.SampleUnit,System.Nullable{System.Int32},System.Data.Common.DbTransaction)">
	<summary>
 This method traverses the entire sampleplan and does an insert, update, delete, or nothing to each unit.
 </summary>
	<param name="unit"></param>
	<param name="ParentUnitId"></param>
	<param name="tran"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.DeleteAndThenInsertServices(Nrc.QualiSys.Library.SampleUnit,System.Data.Common.DbTransaction)">
	<summary>
 This method deletes and then reinserts services for the unit.
 </summary>
	<param name="unit"></param>
	<param name="tran"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.GetNullableParentSampleUnitId(System.Nullable{System.Int32})">
	<summary>
 Helper fuction for checking if the parent unit Id is null
 </summary>
	<param name="parentUnitId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.GetNullableFacilityId(Nrc.QualiSys.Library.Facility)">
	<summary>
 Helper function to determine if the facility Id is null
 </summary>
	<param name="unitFacility"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.GetUnitSelectionValue(Nrc.QualiSys.Library.SampleUnit)">
	<summary>
 Helper function that returns the integer value for a unit selection value
 </summary>
	<param name="unit"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.InsertUnit(Nrc.QualiSys.Library.SampleUnit,System.Nullable{System.Int32},System.Data.Common.DbTransaction)">
	<summary>
 Inserts a unit into the database.
 </summary>
	<param name="unit"></param>
	<param name="ParentUnitId"></param>
	<param name="tran"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.UpdateUnit(Nrc.QualiSys.Library.SampleUnit,System.Data.Common.DbTransaction)">
	<summary>
 Updates a unit in the database.
 </summary>
	<param name="unit"></param>
	<param name="tran"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.DeleteUnit(System.Int32,System.Data.Common.DbTransaction)">
	<summary>
 Deletes a unit in the database.
 </summary>
	<param name="sampleUnitId"></param>
	<param name="tran"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.SampleUnitProvider.IsDeletable(System.Int32,System.Collections.ObjectModel.Collection{System.String}@)">
	<summary>
 Indicates whether a unit is deletable
 </summary>
	<param name="sampleUnitId"></param>
	<param name="mUnDeletableReasons"></param>
	<returns></returns>
	<remarks>This method also takes a collection of strings that it adds messages to.  These
 messages indicate the reasons why a unit cannot be deleted.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.PopulateCriteria(Nrc.Framework.Data.SafeDataReader)">
	<summary>
 Creates an instance of a criteria  from a datareader
 </summary>
	<param name="rdr"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.SelectCriteria(System.Int32)">
	<summary>
 Returns an instance of a criteria
 </summary>
	<param name="criteriaStatementId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.PopulateCriteriaClause(Nrc.Framework.Data.SafeDataReader)">
	<summary>
 Creates an instance of a criteria clause from a datareader
 </summary>
	<param name="rdr"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.SelectCriteriaClauseByStatementAndPhraseId(System.Int32,System.Int32)">
	<summary>
 Returns collection of criteria clauses
 </summary>
	<param name="criteriaStatementId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.PopulateCriteriaInValue(Nrc.Framework.Data.SafeDataReader)">
	<summary>
 Creates an instance of a criteria in value from a datareader
 </summary>
	<param name="rdr"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.SelectCriteriaInListByCriteriaClause(System.Int32)">
	<summary>
 Returns a collection of a criteria in lists
 </summary>
	<param name="criteriaClauseId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.PopulateCriteriaPhrase(Nrc.Framework.Data.SafeDataReader)">
	<summary>
 Creates an instance of a criteria phrase from a datareader
 </summary>
	<param name="rdr"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.SelectCriteriaPhraseByCriteriaStatementId(System.Int32)">
	<summary>
 Returns a collection of a criteria phrases
 </summary>
	<param name="criteriaStatementId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.DeleteCriteria(System.Int32,System.Data.Common.DbTransaction)">
	<summary>
 Deletes a criteria
 </summary>
	<param name="criteriaStatementId"></param>
	<param name="tran"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.DeleteCriteriaPhrases(System.Int32,System.Data.Common.DbTransaction)">
	<summary>
 Deletes all criateria phrases for a criteria
 </summary>
	<param name="criteriaStatementId"></param>
	<param name="tran"></param>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.InsertCriteria(Nrc.QualiSys.Library.Criteria,System.String,System.Data.Common.DbTransaction)">
	<summary>
 Inserts a criteria  
 </summary>
	<param name="criteria"></param>
	<param name="dummyName"></param>
	<param name="tran"></param>
	<returns></returns>
	<remarks>This version is used when the criteria object is part of a sampleunit.  When criteria
 statements are added to units, no rule name is added. 
 </remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.InsertCriteria(Nrc.QualiSys.Library.Criteria,System.Data.Common.DbTransaction)">
	<summary>
 Inserts a criteria
 </summary>
	<param name="criteria"></param>
	<param name="tran"></param>
	<returns></returns>
	<remarks>This version is used when the criteria object is not part of a sampleunit.</remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.InsertCriteriaClause(System.Int32,System.Int32,System.Int32,System.Int32,Nrc.QualiSys.Library.CriteriaClause.Operators,System.String,System.String,System.Data.Common.DbTransaction)">
	<summary>
 Inserts a criteria clause
 </summary>
	<param name="criteriaStatementId"></param>
	<param name="criteriaPhraseId"></param>
	<param name="tableId"></param>
	<param name="fieldId"></param>
	<param name="operator"></param>
	<param name="lowValue"></param>
	<param name="highValue"></param>
	<param name="tran"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.InsertCriteriaInValue(System.Int32,System.String,System.Data.Common.DbTransaction)">
	<summary>
 Inserts a criteria in value
 </summary>
	<param name="criteriaClauseId"></param>
	<param name="value"></param>
	<param name="tran"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Nrc.QualiSys.Library.SqlDataProvider.CriteriaProvider.UpdateCriteria(Nrc.QualiSys.Library.Criteria,System.Data.Common.DbTransaction)">
	<summary>
 Updates a criteria
 </summary>
	<param name="criteria"></param>
	<param name="tran"></param>
	<remarks>When a criteria is updated, all phrases are deleted and readded.</remarks>
</member>
</members>
</doc>