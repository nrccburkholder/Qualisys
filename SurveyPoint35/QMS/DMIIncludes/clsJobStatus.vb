Option Strict On

Public Class clsJobStatus

    Public Const JOB_NOT_FOUND As Integer = -1
    Private Shared oHT As Hashtable = New Hashtable()
    Private Shared oLock As Object = New Object()
    Private Shared nCurrentJobIDSuffix As Integer = 0
    Private Shared nLastJobIDPrefix As Long = Nothing


    'Generates a new job, sets it's status to 0, and returns the job ID
    Public Shared Function CreateJob() As String
        Dim nNewJobIdPrefix As Long = Now.Ticks
        Dim sNewJobId As String = nNewJobIdPrefix.ToString

        SyncLock oLock
            If (nNewJobIdPrefix = nLastJobIDPrefix) Then
                If nCurrentJobIDSuffix >= Integer.MaxValue Then
                    Throw New InvalidOperationException("Could not generate new job id in CreateJob. The job id suffix'" + nCurrentJobIDSuffix.ToString + "' would exceed max integer.")
                End If

                sNewJobId += "-" + nCurrentJobIDSuffix.ToString
                nCurrentJobIDSuffix += 1
            Else
                nCurrentJobIDSuffix = 0
            End If

            nLastJobIDPrefix = nNewJobIdPrefix

            If oHT.ContainsKey(sNewJobId) Then
                Throw New InvalidOperationException("Could not generate new job id in CreateJob. Job id '" + sNewJobId + "' was already in use.")
            End If

            oHT(sNewJobId) = 0
        End SyncLock

        Return sNewJobId
    End Function

    'Sets the status of a job generated by CreateJob()
    Public Shared Sub SetStatus(ByVal sJobID As String, ByVal iValue As Integer)
        'base method
        SyncLock oLock
            If oHT.ContainsKey(sJobID) Then
                oHT(sJobID) = iValue
            Else
                Throw New InvalidOperationException("Unknown or invalid job id detected in SetStatus. The specified id was: '" & sJobID & "'")
            End If
        End SyncLock
    End Sub

    Public Shared Sub SetStatus(ByVal sJobID As String, ByVal iCurrentRow As Integer, ByVal iTotalRows As Integer, ByVal iStartStatus As Integer, ByVal iEndStatus As Integer)
        'interface
        Dim iStatus As Integer = StatusCalulator(iCurrentRow, iTotalRows, iStartStatus, iEndStatus)
        SetStatus(sJobID, iStatus)
    End Sub

    Public Shared Sub IncrementStatus(ByVal sJobID As String, Optional ByVal iValue As Integer = 1)
        Dim iRetVal As Integer

        iRetVal = CheckStatus(sJobID)
        SetStatus(sJobID, iRetVal + iValue)
    End Sub

    Public Shared Function IsActiveJob(ByVal sJobID As String) As Boolean
        SyncLock oLock
            Return oHT.ContainsKey(sJobID)
        End SyncLock
    End Function

    Public Shared Function CheckStatus(ByVal sJobID As String) As Integer
        Dim iretval As Integer = JOB_NOT_FOUND

        SyncLock oLock
            If oHT.ContainsKey(sJobID) Then
                iretval = CInt(oHT(sJobID))
            End If
        End SyncLock

        Return iretval
    End Function

    Public Shared Function StatusCalulator(ByVal iCurrentRow As Integer, ByVal iTotalRows As Integer, ByVal iStartStatus As Integer, ByVal iEndStatus As Integer) As Integer
        Dim iRetval As Integer = CInt(iStartStatus + (CDbl(iCurrentRow / iTotalRows) * (iEndStatus - iStartStatus)))
        Return iRetval
    End Function

    'Deletes a job generated by CreateJob()
    Public Shared Sub RemoveJob(ByVal sJobID As String)
        SyncLock oLock
            If oHT.ContainsKey(sJobID) Then
                oHT.Remove(sJobID)
            Else
                Throw New InvalidOperationException("Unknown or invalid job id detected in RemoveJob. The specified id was: '" & sJobID & "'")
            End If
        End SyncLock
    End Sub

    'Deletes a job generated by CreateJob()
    'Will not produce an error if the job id was not present
    Public Shared Sub RemoveJobNoThrow(ByVal sJobID As String)
        SyncLock oLock
            If oHT.ContainsKey(sJobID) Then
                oHT.Remove(sJobID)
            End If
        End SyncLock
    End Sub
End Class
