Imports DMI.clsUtil

Public Class frmScriptScreen
    Inherits System.Web.UI.Page
    Protected WithEvents lblPageTitle As System.Web.UI.WebControls.Label
    Protected WithEvents lblRespondentInfo As System.Web.UI.WebControls.Label
    Protected WithEvents btnPrevScreen As System.Web.UI.WebControls.Button
    Protected WithEvents btnNextScreen As System.Web.UI.WebControls.Button
    Protected WithEvents lblScriptName As System.Web.UI.WebControls.Label
    Protected WithEvents lblScreenTitle As System.Web.UI.WebControls.Label
    Protected WithEvents ltScreenText As System.Web.UI.WebControls.Literal
    Protected WithEvents phAnswerCategories As System.Web.UI.WebControls.PlaceHolder
    Protected WithEvents lbExitAndScoreSurvey As System.Web.UI.WebControls.LinkButton
    Protected WithEvents lbExit As System.Web.UI.WebControls.LinkButton
    Protected WithEvents tblScriptStatus As System.Web.UI.WebControls.Table

#Region " Web Form Designer Generated Code "

    'This call is required by the Web Form Designer.
    <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()

    End Sub

    Private Sub Page_Init(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Init
        'CODEGEN: This method call is required by the Web Form Designer
        'Do not modify it using the code editor.
        InitializeComponent()
    End Sub

#End Region

    Private m_oSurveyScript As clsScriptOps

    Private m_arrResponses() As String

    Private m_htResponseText As Hashtable

    Private Const DATASET_NAME As String = "OPERATIONS/SCRIPTSCREEN"

    Private Enum KeyPressed
        PREV_SCREEN = -1
        NEXT_SCREEN = 1
        EXIT_SURVEY = 0

    End Enum

    Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        m_oSurveyScript = New clsScriptOps(Application("DSN"))

        'Determine whether page setup is required:
        'user has dataset 
        If Not IsNothing(CType(Session("ds"), DataSet)) Then
            'dataset generated by page
            If m_oSurveyScript.VerifyNamedDataSet(CType(Session("ds"), DataSet), DATASET_NAME) Then

                If Not Page.IsPostBack And IsNumeric(Request.QueryString("ssid")) Then
                    '*** Script Status link clicked ***
                    ViewState("RespondentID") = Integer.Parse("0" & Request.QueryString("rid"))
                    ViewState("ScriptID") = Integer.Parse("0" & Request.QueryString("scrid"))
                    ViewState("ScriptScreenID") = Integer.Parse("0" & Request.QueryString("ssid"))
                    ViewState("InputMode") = Integer.Parse("0" & Request.QueryString("input"))

                    'setup script
                    SetupScript(ViewState("InputMode"))

                    m_oSurveyScript.ScriptScreenID = ViewState("ScriptScreenID")

                    SetupScreen()

                Else
                    '** screen next/prev button pressed ***
                    m_oSurveyScript.ScriptScreenID = ViewState("ScriptScreenID")

                End If

                'no further setup required
                Exit Sub

            End If

        End If

        '*** first time entering page ***
        ViewState("InputMode") = Integer.Parse("0" & Request.QueryString("input"))
        'security check
        If QMS.clsInputMode.AllowAccess(CType(Session("Privledges"), ArrayList), ViewState("InputMode")) Then
            PageSetup()
            'setup script
            SetupScript(ViewState("InputMode"))
            'setup screen
            SetupScreen()

        Else
            'User cannot access this page in current input mode, reflect
            Response.Redirect(QMS.clsQMSSecurity.NonPrivAccess(Request, Session))

        End If


    End Sub

    Private Sub PageSetup()

        ViewState("RespondentID") = Integer.Parse("0" & Request.QueryString("rid"))
        ViewState("ScriptID") = Integer.Parse("0" & Request.QueryString("scrid"))
        ViewState("ScriptScreenID") = Integer.Parse("0" & Request.QueryString("ssid"))

        RecordSurveyStart()

        'load response datset
        m_oSurveyScript.LoadDataSet(ViewState("ScriptID"), ViewState("RespondentID"))

        If m_oSurveyScript.ScriptScreenDataTable.Rows.Count > 0 Then
            Session("ds") = m_oSurveyScript.NamedDataSet(DATASET_NAME)

            If m_oSurveyScript.ErrorMsg.Length = 0 Then
                'no dataset load errors

                'Get screen information
                If Integer.Parse(ViewState("ScriptScreenID")) > 0 Then
                    'load specific screen
                    m_oSurveyScript.ScriptScreenID = ViewState("ScriptScreenID")

                Else
                    'load first screen
                    m_oSurveyScript.ScriptScreenIndex = 1
                    ViewState("ScriptScreenID") = m_oSurveyScript.ScriptScreenID

                End If


            Else
                'display dataset load error
                DMI.WebFormTools.Msgbox(Me, m_oSurveyScript.ErrorMsg)

            End If

        Else
            Response.Redirect(Request.UrlReferrer.PathAndQuery)

        End If

    End Sub

    Private Sub SetupScript(ByVal iInputMode As QMS.qmsInputMode)
        Dim drRespondent As DataRow = m_oSurveyScript.RespondentDataRow
        Dim drScript As DataRow = m_oSurveyScript.ScriptDataRow

        'Set page title
        lblPageTitle.Text = String.Format("{0} {1} : {2} : {3}", _
                            QMS.clsInputMode.InputModeName(iInputMode), _
                            drScript.Item("SurveyName"), _
                            drRespondent.Item("ClientName"), _
                            drRespondent.Item("SurveyInstanceName"))

        'Set script name
        lblScriptName.Text = drScript.Item("ScriptName")


        With drRespondent
            'Set respondent info
            lblRespondentInfo.Text = String.Format("RID {0}, {1}, {2}, {3}, D {4}, E {5}", _
                                    .Item("RespondentID"), _
                                    .Item("FormattedName"), _
                                    DMI.clsUtil.DeNull(.Item("City")), _
                                    DMI.clsUtil.DeNull(.Item("State")), _
                                    FormatTelephone(DMI.clsUtil.DeNull(.Item("TelephoneDay"))), _
                                    FormatTelephone(DMI.clsUtil.DeNull(.Item("TelephoneEvening"))))

        End With

    End Sub

    Private Sub SetupScreen()
        'Set screen title
        With m_oSurveyScript.CurrentScreenDataRow
            lblScreenTitle.Text = String.Format("<STRONG>{1}</STRONG> <FONT size=""2"">({0})</FONT>", .Item("ItemOrder"), .Item("Title"))

        End With

        'Update Script Status
        DisplayScriptStatus()

        'Update Script Screen Text
        DisplayScreenText()

        'Update Script Screen Categories
        DisplayScreenCategories()

    End Sub

    Private Sub DisplayCorrectionScreen()
        Dim drv As DataRowView
        Dim sDataEntry As String = ""
        Dim sVerification As String = ""
        Dim sResponses As String = ""
        Dim sResponse As String

        ViewState("Correction") = 1

        'display correction message
        ltScreenText.Text = "Your entry does not match previous data entry. Please make a correction:"

        'get answers
        For Each drv In m_oSurveyScript.CurrentCategoriesDataView
            'Data entry response
            If drv.Item("ResponseStatus") = 1 Then
                sDataEntry &= String.Format("{0}{1}, ", drv.Item("AnswerValue"), _
                    IIf(DeNull(drv.Item("ResponseText")) = "", "", ":&nbsp;" & drv.Item("ResponseText")))
            End If

            'Verification response
            If Array.IndexOf(m_arrResponses, CType(drv.Item("AnswerValue"), String)) >= 0 Then
                sVerification &= String.Format("{0}{1}, ", drv.Item("AnswerValue"), _
                    IIf(m_htResponseText.ContainsKey(drv.Item("AnswerValue")), ":&nbsp;" & m_htResponseText(drv.Item("AnswerValue")), ""))

            End If

        Next
        sDataEntry = Chop(sDataEntry, ", ")
        sVerification = Chop(sVerification, ", ")

        With phAnswerCategories.Controls
            'Display correction categories
            .Add(DMI.WebFormTools.GetRadioButton("Correction", "1", 0, "C1"))
            .Add(DMI.WebFormTools.GetLiteral(String.Format("1&nbsp;<strong>Choose old answer</strong>:&nbsp;{0}<br>", sDataEntry)))
            .Add(DMI.WebFormTools.GetRadioButton("Correction", "2", 0, "C2"))
            .Add(DMI.WebFormTools.GetLiteral(String.Format("2&nbsp;<strong>Choose new answer</strong>:&nbsp;{0}<br>", sVerification)))
            .Add(DMI.WebFormTools.GetRadioButton("Correction", "3", 0, "C3"))
            .Add(DMI.WebFormTools.GetLiteral("3&nbsp;<strong>Choose neither answer, re-select</strong>"))

            'Add verification responses to hidden fields
            For Each sResponse In m_arrResponses
                If IsNumeric(sResponse) Then
                    sResponses &= String.Format("{0},", sResponse)
                    'Check for open answers
                    If m_htResponseText.ContainsKey(Integer.Parse(sResponse)) Then
                        .Add(DMI.WebFormTools.GetHiddenField(String.Format("OA{0}", sResponse), m_htResponseText(Integer.Parse(sResponse))))

                    End If

                End If

            Next
            sResponses = Chop(sResponses, ",")
            .Add(DMI.WebFormTools.GetHiddenField("Response", sResponses))

        End With

    End Sub

    Private Sub DisplayScriptStatus()
        Dim dr As DataRow
        Dim dt As DataTable
        Dim trStatusRow As New TableRow()
        Dim tcStatusCell As TableCell
        Dim hl As HyperLink

        Const MAX_COLUMNS = 20
        Const CELL_WIDTH = 100 / MAX_COLUMNS

        dt = m_oSurveyScript.UpdateScriptStatus

        For Each dr In dt.Rows

            'Create cell for screen
            tcStatusCell = New TableCell()
            hl = New HyperLink()
            With hl
                .Text = dr.Item("ItemOrder")
                .NavigateUrl = String.Format("scriptscreen.aspx?rid={0}&scrid={1}&ssid={2}&input={3}", _
                    m_oSurveyScript.RespondentID, _
                    m_oSurveyScript.ScriptID, _
                    dr.Item("ScriptScreenID"), _
                    ViewState("InputMode"))

            End With

            With tcStatusCell
                '.BorderColor = Drawing.Color.Black
                '.BorderWidth = WebControls.Unit.Pixel(1)
                '.Width = WebControls.Unit.Percentage(CELL_WIDTH)
                '.HorizontalAlign = HorizontalAlign.Center
                .ToolTip = dr.Item("Title")

                'set status color
                If dr.Item("ScriptScreenID") = ViewState("ScriptScreenID") Then
                    'currently view screen
                    hl.CssClass = "pagecell4"
                    .CssClass = "pagecell4"

                ElseIf dr.Item("ScreenStatus") = qmsScreenStatus.ANSWERED Then
                    'screen answered
                    hl.CssClass = "pagecell2"
                    .CssClass = "pagecell2"

                ElseIf dr.Item("ScreenStatus") = qmsScreenStatus.SKIPPED Then
                    'Valid Screen Skip
                    hl.CssClass = "pagecell3"
                    .CssClass = "pagecell3"

                ElseIf dr.Item("ScreenStatus") = qmsScreenStatus.MULTIMARKED Then
                    'Invalid Screen Skip
                    hl.CssClass = "pagecell5"
                    .CssClass = "pagecell5"

                Else
                    'Invalid screen skip
                    hl.CssClass = "pagecell1"
                    .CssClass = "pagecell1"

                End If

                .Controls.Add(hl)

            End With

            'Add cell to table row
            trStatusRow.Cells.Add(tcStatusCell)

            'Added last column to row
            If (dr.Item("ItemOrder") Mod MAX_COLUMNS) = 0 Then
                'Add row to table and create a new row
                tblScriptStatus.Rows.Add(trStatusRow)
                trStatusRow = New TableRow()

            End If
        Next

        'finish processing last row and add to table
        If (dr.Item("ItemOrder") Mod MAX_COLUMNS) > 0 Then
            tcStatusCell = New TableCell()
            With tcStatusCell
                '.Text = "<span style=""script_status_hl"">&nbsp;</span>"
                .ColumnSpan = MAX_COLUMNS - (dr.Item("ItemOrder") Mod MAX_COLUMNS)
                .Width = WebControls.Unit.Percentage(.ColumnSpan * CELL_WIDTH)


            End With

            trStatusRow.Cells.Add(tcStatusCell)

            tblScriptStatus.Rows.Add(trStatusRow)

        End If

    End Sub

    Private Sub DisplayScreenText()

        If ViewState("InputMode") = QMS.qmsInputMode.VERIFY And ViewState("Verify") > 0 Then
            'Display correction message
            ltScreenText.Text = "<b>Your choice differs from previous data entry. Please make a correction:</b>"

        Else
            'Display screen text
            m_oSurveyScript.UserID = Integer.Parse(HttpContext.Current.User.Identity.Name)
            ltScreenText.Text = m_oSurveyScript.ScreenText

        End If

    End Sub

    Private Sub DisplayScreenCategories()

        'Display answer categories
        m_oSurveyScript.InputMode = ViewState("InputMode")
        m_oSurveyScript.RenderHTMLCategoryControls(phAnswerCategories)

    End Sub

    Private Sub SubmitResponse(ByVal KEY_PRESS As KeyPressed)
        Dim iScriptScreenID As Integer
        Dim iScreenIndex As Integer

        Select Case ViewState("InputMode")
            Case QMS.qmsInputMode.TEST
                'Save responses to dataset then go to next screen

                GetResponse()
                m_oSurveyScript.SubmitResponse(m_arrResponses, m_htResponseText)
                m_oSurveyScript.ResetResponseStatus()
                Session("ds") = m_oSurveyScript.NamedDataSet(DATASET_NAME)
                IncrementScreen(KEY_PRESS)
                SetupScreen()

            Case QMS.qmsInputMode.VERIFY
                If ViewState("Correction") = 0 Then
                    'Verification entry

                    GetResponse()

                    If CompareResponses() Then
                        'responses match, go to next screen
                        IncrementScreen(KEY_PRESS)
                        SetupScreen()

                    Else
                        'responses do not match, display correction
                        DisplayCorrectionScreen()

                    End If

                Else
                    'Verification correction
                    If IsNumeric(Request.Form("Correction")) Then
                        RecordCorrection(Integer.Parse(Request.Form("Correction")), m_oSurveyScript.ScriptScreenID)

                        Select Case Integer.Parse(Request.Form("Correction"))
                            Case qmsCorrection.SELECT_OLD
                                'old response correct, go to next screen
                                IncrementScreen(KEY_PRESS)

                            Case qmsCorrection.SELECT_NEW
                                'new response correct, save new response to database and go to next screen
                                GetResponse()
                                m_oSurveyScript.SubmitResponse(m_arrResponses, m_htResponseText)
                                m_oSurveyScript.UpdateResponse()
                                Session("ds") = m_oSurveyScript.NamedDataSet(DATASET_NAME)
                                IncrementScreen(KEY_PRESS)

                            Case qmsCorrection.RESELECT
                                're-select response

                        End Select
                        'turn off correction mode
                        ViewState("Correction") = 0
                        SetupScreen()

                    Else
                        GetResponse()
                        DisplayCorrectionScreen()

                    End If

                End If

            Case Else
                'data entry mode (default)

                'Save responses to database then go to next screen
                GetResponse()
                m_oSurveyScript.SubmitResponse(m_arrResponses, m_htResponseText)
                m_oSurveyScript.UpdateResponse()
                Session("ds") = m_oSurveyScript.NamedDataSet(DATASET_NAME)
                IncrementScreen(KEY_PRESS)
                SetupScreen()

        End Select

    End Sub

    Private Function CompareResponses() As Boolean
        Dim drv As DataRowView
        Dim iValue As Integer

        If ViewState("InputMode") = QMS.qmsInputMode.VERIFY And Request.Form("Correction") = "" Then
            'compare verification response to previous response
            For Each drv In m_oSurveyScript.CurrentCategoriesDataView
                iValue = drv.Item("AnswerValue")

                'check category selection
                If Array.IndexOf(m_arrResponses, CType(iValue, String)) >= 0 Then
                    'category selected by verifier
                    If drv.Item("ResponseStatus") = 0 Then
                        'category not selected by data entry
                        Return False

                    End If

                Else
                    'category not selected by verifier
                    If drv.Item("ResponseStatus") = 1 Then
                        'category selected by data entry
                        Return False

                    End If

                End If

                'check open answer responses
                If drv.Item("AnswerCategoryTypeID") = qmsAnswerCategoryTypes.SELECT_OPEN_ANSWER Or _
                    drv.Item("AnswerCategoryTypeID") = qmsAnswerCategoryTypes.OPEN_ANSWER Then

                    If m_htResponseText(drv.Item("AnswerValue")) <> DeNull(drv.Item("ResponseText")) Then
                        'Open answer text does not match data entry
                        Return False

                    End If
                End If

            Next

        End If

        Return True

    End Function

    Private Sub RecordCorrection(ByVal iCorrection As Integer, Optional ByVal iScriptScreenID As Integer = 0)
        Dim r As New clsRespondents(Application("DSN"), m_oSurveyScript.RespondentID)
        Dim ec As QMS.qmsEvents

        Select Case iCorrection
            Case qmsCorrection.SELECT_OLD
                ec = QMS.qmsEvents.VERIFY_CORRECT_OLD

            Case qmsCorrection.SELECT_NEW
                ec = QMS.qmsEvents.VERIFY_CORRECT_NEW

            Case qmsCorrection.RESELECT
                ec = QMS.qmsEvents.VERIFY_RESELECT
        End Select

        r.InsertEvent(ec, CInt(HttpContext.Current.User.Identity.Name), iScriptScreenID.ToString)

        r = Nothing

    End Sub

    Private Sub GetResponse()
        Dim sResponses As String
        Dim drv As DataRowView
        Dim iAnswerValue As Integer
        Dim alResponses As New ArrayList()
        Dim sOAResponse As String

        'get answer category responses
        sResponses = Request.Form("response")
        If IsNothing(sResponses) Then sResponses = " "
        m_arrResponses = sResponses.Split(",")
        alResponses.InsertRange(0, m_arrResponses)

        'Init hashtable to hold text responses
        m_htResponseText = New Hashtable()

        'look for open answer responses
        For Each drv In m_oSurveyScript.CurrentCategoriesDataView
            If drv.Item("AnswerCategoryTypeID") = qmsAnswerCategoryTypes.SELECT_OPEN_ANSWER _
                Or drv.Item("AnswerCategoryTypeID") = qmsAnswerCategoryTypes.OPEN_ANSWER Then

                'get open answer text response
                sOAResponse = Request.Form(String.Format("OA{0}", drv.Item("AnswerValue")))
                If IsNothing(sOAResponse) Then sOAResponse = ""

                'save answer if open answer type and has response text
                'or if select open answer type
                If (drv.Item("AnswerCategoryTypeID") = qmsAnswerCategoryTypes.OPEN_ANSWER And sOAResponse.Length > 0) Or _
                    drv.Item("AnswerCategoryTypeID") = qmsAnswerCategoryTypes.SELECT_OPEN_ANSWER Then
                    'not blank, add answer text to hashtable
                    m_htResponseText.Add(drv.Item("AnswerValue"), sOAResponse)

                Else
                    'blank, remove from answer category responses
                    alResponses.Remove(CStr(drv.Item("AnswerValue")))

                End If

            End If

        Next

        'copy arraylist to one-dimensional array
        m_arrResponses = Array.CreateInstance(GetType(String), alResponses.Count)
        alResponses.CopyTo(m_arrResponses, 0)

    End Sub

    Private Sub IncrementScreen(ByVal KEY_PRESSED As KeyPressed)

        Select Case KEY_PRESSED
            Case KeyPressed.NEXT_SCREEN
                If Not m_oSurveyScript.NextScreen() Then
                    If ViewState("InputMode") <> QMS.qmsInputMode.TEST Then
                        m_oSurveyScript.UserID = Integer.Parse(HttpContext.Current.User.Identity.Name)
                        m_oSurveyScript.InputMode = ViewState("InputMode")
                        m_oSurveyScript.ScoreScript()
                        RecordSurveyEnd()

                    Else
                        Response.Redirect(String.Format("../scripts/scriptdetails.aspx?{1}={0}", m_oSurveyScript.ScriptID, frmScriptDetails.REQUEST_SCRIPT_ID_KEY))

                    End If

                    If ViewState("InputMode") = QMS.qmsInputMode.CATI Or ViewState("InputMode") = QMS.qmsInputMode.RCALL Then
                        Response.Redirect(String.Format("../respondents/respondentdetails.aspx?rid={0}&input={1}", m_oSurveyScript.RespondentID, ViewState("InputMode")))
                        'Response.Redirect(String.Format("../operations/calllist.aspx?siid={0}&input={1}", m_oSurveyScript.SurveyInstanceID, ViewState("InputMode")))

                    Else
                        Response.Redirect(String.Format("../respondents/getrespondent.aspx?input={0}", ViewState("InputMode")))

                    End If


                End If

            Case KeyPressed.PREV_SCREEN
                If Not m_oSurveyScript.PrevScreen() Then
                    If ViewState("InputMode") <> QMS.qmsInputMode.TEST Then
                        m_oSurveyScript.UserID = Integer.Parse(HttpContext.Current.User.Identity.Name)
                        m_oSurveyScript.InputMode = ViewState("InputMode")
                        m_oSurveyScript.ScoreScript()
                        RecordSurveyEnd()

                    Else
                        Response.Redirect(String.Format("../scripts/scriptdetails.aspx?{1}={0}", m_oSurveyScript.ScriptID, frmScriptDetails.REQUEST_SCRIPT_ID_KEY))

                    End If

                    Response.Redirect(String.Format("../respondents/respondentdetails.aspx?rid={0}&input={1}", m_oSurveyScript.RespondentID, ViewState("InputMode")))

                End If

            Case KeyPressed.EXIT_SURVEY
                If ViewState("InputMode") <> QMS.qmsInputMode.TEST Then
                    m_oSurveyScript.UserID = Integer.Parse(HttpContext.Current.User.Identity.Name)
                    m_oSurveyScript.InputMode = ViewState("InputMode")
                    m_oSurveyScript.ScoreScript()
                    RecordSurveyEnd()

                Else
                    Response.Redirect(String.Format("../scripts/scriptdetails.aspx?{1}={0}", m_oSurveyScript.ScriptID, frmScriptDetails.REQUEST_SCRIPT_ID_KEY))

                End If

                Response.Redirect(String.Format("../respondents/respondentdetails.aspx?rid={0}&input={1}", m_oSurveyScript.RespondentID, ViewState("InputMode")))

        End Select

        ViewState("ScriptScreenID") = m_oSurveyScript.ScriptScreenID

    End Sub

    Private Sub btnNextScreen_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnNextScreen.Click
        SubmitResponse(KeyPressed.NEXT_SCREEN)

    End Sub

    Private Sub btnPrevScreen_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnPrevScreen.Click
        SubmitResponse(KeyPressed.PREV_SCREEN)

    End Sub

    Private Sub lbExitAndScoreSurvey_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles lbExitAndScoreSurvey.Click
        SubmitResponse(KeyPressed.EXIT_SURVEY)

    End Sub

    Private Sub lbExit_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles lbExit.Click
        'Set exit with no scoring link
        If ViewState("InputMode") = QMS.qmsInputMode.TEST Or m_oSurveyScript.RespondentDataRow.Item("RespondentID") = 0 Then
            'for test mode exit to script details
            Response.Redirect(String.Format("../scripts/scriptdetails.aspx?{1}={0}", m_oSurveyScript.ScriptDataRow.Item("ScriptID"), frmScriptDetails.REQUEST_SCRIPT_ID_KEY))

        Else
            RecordSurveyEnd()

            'otherwise, exit to respondent details 
            Response.Redirect(String.Format("../respondents/respondentdetails.aspx?rid={0}&input={1}", _
                m_oSurveyScript.RespondentDataRow.Item("RespondentID"), ViewState("InputMode")))

        End If

    End Sub

    Private Sub RecordSurveyStart()
        Dim r As clsRespondents
        Dim ec As QMS.qmsEvents

        'record start of survey
        Select Case ViewState("InputMode")
            Case QMS.qmsInputMode.DATAENTRY
                ec = QMS.qmsEvents.DE_START
            Case QMS.qmsInputMode.VERIFY
                ec = QMS.qmsEvents.VERIFY_START
            Case QMS.qmsInputMode.CATI
                ec = QMS.qmsEvents.CATI_START
            Case QMS.qmsInputMode.RCALL
                ec = QMS.qmsEvents.REMINDER_START
        End Select
        If ec > 0 Then
            r = New clsRespondents(Application("DSN"), ViewState("RespondentID"))
            r.InsertEvent(ec, Integer.Parse(HttpContext.Current.User.Identity.Name))

        End If

    End Sub

    Private Sub RecordSurveyEnd()
        Dim r As clsRespondents
        Dim ec As QMS.qmsEvents = QMS.qmsEvents.NONE

        'record start of survey
        Select Case ViewState("InputMode")
            Case QMS.qmsInputMode.DATAENTRY
                ec = QMS.qmsEvents.DE_END
            Case QMS.qmsInputMode.VERIFY
                ec = QMS.qmsEvents.VERIFY_END
            Case QMS.qmsInputMode.CATI
                ec = QMS.qmsEvents.CATI_END
            Case QMS.qmsInputMode.RCALL
                ec = QMS.qmsEvents.REMINDER_END
        End Select
        If ec > 0 Then
            r = New clsRespondents(Application("DSN"), ViewState("RespondentID"))
            r.InsertEvent(ec, Integer.Parse(HttpContext.Current.User.Identity.Name))

        End If

    End Sub

End Class
