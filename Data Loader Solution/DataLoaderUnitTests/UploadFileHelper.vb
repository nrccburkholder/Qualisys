Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports System
Imports System.Text
Imports System.Collections.Generic
Imports Nrc.DataLoader.Library
Imports Nrc.Qualisys.QLoader.Library
Imports TypeMock
Imports UploaderUnitTests

Public Class UploadFileHelper
#Region "Constants"
    Public Const DummyRecordGroupID As Integer = 16752
    Public Const DummyRecordFileSize As Integer = 1200
    Public Const DummyRecordOriginalFilename As String = "C:\My Documents\Data.txt"
    Public Const DummyRecorFileName As String = "C:\Temp\UploadedFile.txt"
    Public Const DummyRecordJanuaryData As String = "January Data"
    Public Const DummyProjectManagerID As Integer = -1
    Public Const FAKEMEMBERFULLNAME As String = "Under Cover FakeMember"
    Public Const FakeMemberId As Integer = 164111
    Public Const TestPackageName As String = "Test Package Name"
    Public Const TestPackageFriendlyName As String = "Test PackageFriendlyName"
    Public Const FakeProjectManagerFirstName As String = "FakeProjectManagerFirstName"
    Public Const FakeProjectManagerLastname As String = "FakeProjectManagerLastname"
#End Region

#Region "Helper Shared Functions"
    Public Shared Function CreateDummyDTSPackage() As DTSPackage
        Dim FakeDTSPackage As New DTSPackage()
        FakeDTSPackage.BitActive = True
        FakeDTSPackage.CreatorID = 0
        FakeDTSPackage.DateLastModified = Now()
        FakeDTSPackage.Modified = False

        FakeDTSPackage.PackageFriendlyName = TestPackageFriendlyName
        FakeDTSPackage.PackageID = 0
        FakeDTSPackage.PackageName = TestPackageName
        FakeDTSPackage.TeamID = 0
        FakeDTSPackage.TeamName = ""
        FakeDTSPackage.Version = 0
        Return FakeDTSPackage
    End Function
    ''' <summary>Caution! This will actually create a record in UploadFile table if not 
    ''' called from a test that runs in a transaction.</summary>
    ''' <returns></returns>
    Public Shared Function CreateDummyUploadFile() As UploadFile
        'Do our saving and verifying in a new transaction scope to avoid data dependency
        'Note: in your connection string enlist attribute should be set to true to be 
        'included in the Transaction. Transactions can have only one connection so if you need to 
        'leave NrcAuth connection out then set enlist to false in NrcAuthConnectionString in App.Config
        '***************************************************************************************
        'Using scope As New System.Transactions.TransactionScope(System.Transactions.TransactionScopeOption.RequiresNew, System.TimeSpan.FromSeconds(10))
        '  We(don) 't need an actual PM member from the database to save with the uploadfile so
        'let's mock the PM
        Using rex As New RecordExpectations()
            Dim fakeMember As NRC.NRCAuthLib.Member = RecorderManager.CreateMockedObject(Of NRC.NRCAuthLib.Member)()
            rex.ExpectAndReturn(fakeMember.MemberId, FakeMemberId)
            rex.ExpectAndReturn(fakeMember.FirstName, FakeProjectManagerFirstName)
            rex.ExpectAndReturn(fakeMember.LastName, FakeProjectManagerLastname)
            rex.ExpectAndReturn(fakeMember.FullName, FakeProjectManagerFirstName & " " & FakeProjectManagerLastname)
            rex.ExpectAndReturn(NRC.NRCAuthLib.Member.GetMember("PM Member"), fakeMember).RepeatAlways.WhenArgumentsMatch(DummyProjectManagerID)
        End Using

        Dim DummyRecord As UploadFile
        DummyRecord = NRC.DataLoader.Library.UploadFile.NewUploadFile()
        DummyRecord.UploadAction = UploadAction.Get(1)
        DummyRecord.OrigFileName = DummyRecordOriginalFilename
        DummyRecord.FileName = DummyRecorFileName
        DummyRecord.FileSize = DummyRecordFileSize
        DummyRecord.UserNotes = DummyRecordJanuaryData
        DummyRecord.ProjectManager = ProjectManager.GetByMemberID(DummyProjectManagerID)
        DummyRecord.GroupID = DummyRecordGroupID
        DummyRecord.MemberId = 1
        Dim DummyState As UploadFileState = UploadFileState.NewUploadFileState()
        DummyState.StateOfUpload = UploadState.GetByName(UploadState.AvailableStates.UploadQueued)
        DummyState.StateParameter = "Generated by automated unit tests"
        DummyState.UploadFileId = DummyRecord.Id
        DummyRecord.UploadFileState = DummyState

        Dim pkg1 As UploadFilePackage = UploadFilePackage.NewUploadFilePackage()
        Dim pkg2 As UploadFilePackage = UploadFilePackage.NewUploadFilePackage()

        Dim FakeDTSPackage As DTSPackage = CreateDummyDTSPackage()

        pkg1.Package = FakeDTSPackage
        pkg2.Package = FakeDTSPackage

        DummyRecord.UploadFilePackages.Add(pkg1)
        DummyRecord.UploadFilePackages.Add(pkg2)
        DummyRecord.Save()
        Assert.IsNotNull(UploadFile.Get(DummyRecord.Id))

        Return DummyRecord
    End Function
#End Region
End Class