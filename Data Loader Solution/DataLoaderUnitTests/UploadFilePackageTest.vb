'The following code was generated by Microsoft Visual Studio 2005.
'The test owner should check each test for validity.
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports System
Imports System.Text
Imports System.Collections.Generic
Imports NRC.DataLoader.Library
Imports TypeMock




'''<summary>
'''This is a test class for NRC.DataLoader.Library.UploadFilePackage and is intended
'''to contain all NRC.DataLoader.Library.UploadFilePackage Unit Tests
'''</summary>
<TestClass()> _
Public Class UploadFilePackageTest

    Private Shared scope As System.Transactions.TransactionScope
    Private testContextInstance As TestContext

    '''<summary>
    '''Gets or sets the test context which provides
    '''information about and functionality for the current test run.
    '''</summary>
    Public Property TestContext() As TestContext
        Get
            Return testContextInstance
        End Get
        Set(ByVal value As TestContext)
            testContextInstance = value
        End Set
    End Property
#Region "Additional test attributes"
    '
    'You can use the following additional attributes as you write your tests:
    '
    'Use ClassInitialize to run code before running the first test in the class
    '
    <ClassInitialize()> _
    Public Shared Sub MyClassInitialize(ByVal testContext As TestContext)
        NRC.NRCAuthLib.StaticConfig.NRCAuthConnection = Config.NrcAuthConnection
        NRC.NRCAuthLib.StaticConfig.EnvironmentType = NRC.NRCAuthLib.StaticConfig.Environment.Development
    End Sub
    '
    'Use ClassCleanup to run code after all tests in a class have run
    '
    <ClassCleanup()> _
    Public Shared Sub MyClassCleanup()
    End Sub


    'Use TestInitialize to run code before running each test
    '
    <TestInitialize()> _
    Public Sub MyTestInitialize()
        'Run every test in a new transaction scope to avoid data dependency
        'Note: in your connection string enlist attribute should be set to true to be 
        'included in the Transaction. Transactions can have only one connection so if you need to 
        'leave NrcAuth connection out then set enlist to false in NrcAuthConnectionString in App.Config
        '***************************************************************************************
        scope = New System.Transactions.TransactionScope(System.Transactions.TransactionScopeOption.RequiresNew, System.TimeSpan.FromMinutes(2))
        MockManager.ClearAll() 'Clear expectations before each test
    End Sub

    'Use TestCleanup to run code after each test has run
    <TestCleanup()> _
    Public Sub MyTestCleanup()
        scope.Dispose()
    End Sub
    '
#End Region


    '''<summary>
    '''A test for GetByUploadFile(ByVal NRC.DataLoader.Library.UploadFile)
    '''</summary>
    <TestMethod()> _
    Public Sub GetByUploadFileTest()
        Dim pUploadFile As UploadFile = UploadFileHelper.CreateDummyUploadFile 'TODO: Initialize to an appropriate value
        Assert.IsNotNull(pUploadFile.UploadFilePackages)
        Assert.IsTrue(pUploadFile.UploadFilePackages.Count > 0)

        For Each UploadFilePackage As UploadFilePackage In pUploadFile.UploadFilePackages
            Assert.AreEqual(pUploadFile.Id, UploadFilePackage.UploadFileId)
        Next
    End Sub

    '''<summary>
    '''A test for NewUploadFilePackage()
    '''</summary>
    <TestMethod()> _
    Public Sub NewUploadFilePackageTest()
        Dim newDummyUploadFile As UploadFile = UploadFileHelper.CreateDummyUploadFile
        Assert.IsNotNull(newDummyUploadFile.UploadFilePackages)
        Assert.IsTrue(newDummyUploadFile.UploadFilePackages.Count > 0)
        Assert.IsNotNull(UploadFilePackage.GetByUploadFile(newDummyUploadFile))
    End Sub

End Class
