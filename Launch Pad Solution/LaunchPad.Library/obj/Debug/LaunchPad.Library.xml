<?xml version="1.0"?>
<doc>
<assembly>
<name>
Nrc.LaunchPad.Library
</name>
</assembly>
<members>
<member name="M:Nrc.LaunchPad.Library.Application.BytesToImage(System.Byte[])">
	<summary>
 Converts an array of bytes into an image object
 </summary>
	<param name="imgData">The array of bytes containing an image</param>
	<returns>An image object</returns>
</member><member name="M:Nrc.LaunchPad.Library.Application.ImageToBytes(System.Drawing.Image)">
	<summary>
 Converts an image object into a array of bytes for storage
 </summary>
	<param name="img">The image object to serialize</param>
	<returns>An array of bytes containing the image data</returns>
</member><member name="F:Nrc.LaunchPad.Library.ApplicationProvider.mProviders">
	<summary>A cache of all the provider instances</summary>
</member><member name="P:Nrc.LaunchPad.Library.ApplicationProvider.ProviderList">
	<summary>This property used to read Provider names from config file. The new
 version reads them from QualPro_Params table. To avoid extensive rewrite I kept
 the return type the same. It reads the comma separated list of Application
 provider setting names from QualPro_Params (LPApplicationProviderKeys  setting
 has the comma separated values in QualPro_Params) then for each setting name
 gets the setting and adds to a NameValueCollection to return.</summary>
	<returns>NameValueCollection of Application provider names as keys and the comma
 separated list of provider class and containing assembly name as values to crate
 the instance of the class via reflection.</returns>
	<revision>March - 12- 2009 by Arman Mnatsakanyan</revision>
</member><member name="P:Nrc.LaunchPad.Library.ApplicationProvider.ProviderCategoriesList">
	<summary>This property used to read Provider categories from config file. The new
 version reads them from QualPro_Params table. To avoid extensive rewrite I kept
 the return type the same. It reads the comma separated list of category
 setting names from QualPro_Params (LPProviderCategoryKeys  setting
 has the comma separated values in QualPro_Params) then for each setting name
 gets the setting and adds to a NameValueCollection to return.</summary>
	<returns>NameValueCollection of category names as keys and the comma
 separated list of category values as values (I'm not sure why is it implemented as a NameValueCollection
 since it has only one key value pair: Default="Custom"). 
 </returns>
	<revision>March - 12- 2009 by Arman Mnatsakanyan</revision>
</member><member name="P:Nrc.LaunchPad.Library.ApplicationProvider.Provider(System.String)">
	<summary>
 Gets the specified Provider instance
 </summary>
	<param name="providerName">The name of the ApplicationProvider to return</param>
	<value></value>
	<returns>Returns an instance of the ApplicationProvider specified</returns>
	<remarks></remarks>
</member><member name="P:Nrc.LaunchPad.Library.ApplicationProvider.DefaultProvider">
	<summary>
 Returns an instance of the default provider for the application
 </summary>
</member><member name="M:Nrc.LaunchPad.Library.ApplicationProvider.GetUserApplications">
	<summary>
 Returns a collection of all the applications from all the providers for the current user
 </summary>
</member><member name="P:Nrc.LaunchPad.Library.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Nrc.LaunchPad.Library.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Nrc.LaunchPad.Library.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>